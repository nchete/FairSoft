//
// File generated by rootcint at Mon May  4 11:49:30 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME _ROOT_DICT_Numerical
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "_ROOT_DICT_Numerical.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace genie {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void genie_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("genie", 0 /*version*/, "./UnifGrid.h", 30,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &genie_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void genie_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOTDict {
   void geniecLcLSpline_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_geniecLcLSpline(void *p = 0);
   static void *newArray_geniecLcLSpline(Long_t size, void *p);
   static void delete_geniecLcLSpline(void *p);
   static void deleteArray_geniecLcLSpline(void *p);
   static void destruct_geniecLcLSpline(void *p);
   static void streamer_geniecLcLSpline(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::Spline*)
   {
      ::genie::Spline *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::genie::Spline >(0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::Spline", ::genie::Spline::Class_Version(), "./Spline.h", 41,
                  typeid(::genie::Spline), ::ROOT::DefineBehavior(ptr, ptr),
                  &::genie::Spline::Dictionary, isa_proxy, 0,
                  sizeof(::genie::Spline) );
      instance.SetNew(&new_geniecLcLSpline);
      instance.SetNewArray(&newArray_geniecLcLSpline);
      instance.SetDelete(&delete_geniecLcLSpline);
      instance.SetDeleteArray(&deleteArray_geniecLcLSpline);
      instance.SetDestructor(&destruct_geniecLcLSpline);
      instance.SetStreamerFunc(&streamer_geniecLcLSpline);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::Spline*)
   {
      return GenerateInitInstanceLocal((::genie::Spline*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::Spline*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void geniecLcLRandomGen_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void geniecLcLRandomGen_Dictionary();

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::RandomGen*)
   {
      ::genie::RandomGen *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::genie::RandomGen),0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::RandomGen", "./RandomGen.h", 30,
                  typeid(::genie::RandomGen), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &geniecLcLRandomGen_Dictionary, isa_proxy, 0,
                  sizeof(::genie::RandomGen) );
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::RandomGen*)
   {
      return GenerateInitInstanceLocal((::genie::RandomGen*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::RandomGen*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void geniecLcLRandomGen_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::genie::RandomGen*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void geniecLcLGBFunc_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void geniecLcLGBFunc_Dictionary();
   static void delete_geniecLcLGBFunc(void *p);
   static void deleteArray_geniecLcLGBFunc(void *p);
   static void destruct_geniecLcLGBFunc(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::GBFunc*)
   {
      ::genie::GBFunc *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::genie::GBFunc),0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::GBFunc", "./GBFunc.h", 31,
                  typeid(::genie::GBFunc), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &geniecLcLGBFunc_Dictionary, isa_proxy, 0,
                  sizeof(::genie::GBFunc) );
      instance.SetDelete(&delete_geniecLcLGBFunc);
      instance.SetDeleteArray(&deleteArray_geniecLcLGBFunc);
      instance.SetDestructor(&destruct_geniecLcLGBFunc);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::GBFunc*)
   {
      return GenerateInitInstanceLocal((::genie::GBFunc*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::GBFunc*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void geniecLcLGBFunc_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::genie::GBFunc*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void geniecLcLUnifGrid_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void geniecLcLUnifGrid_Dictionary();
   static void *new_geniecLcLUnifGrid(void *p = 0);
   static void *newArray_geniecLcLUnifGrid(Long_t size, void *p);
   static void delete_geniecLcLUnifGrid(void *p);
   static void deleteArray_geniecLcLUnifGrid(void *p);
   static void destruct_geniecLcLUnifGrid(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::UnifGrid*)
   {
      ::genie::UnifGrid *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::genie::UnifGrid),0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::UnifGrid", "./UnifGrid.h", 37,
                  typeid(::genie::UnifGrid), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &geniecLcLUnifGrid_Dictionary, isa_proxy, 0,
                  sizeof(::genie::UnifGrid) );
      instance.SetNew(&new_geniecLcLUnifGrid);
      instance.SetNewArray(&newArray_geniecLcLUnifGrid);
      instance.SetDelete(&delete_geniecLcLUnifGrid);
      instance.SetDeleteArray(&deleteArray_geniecLcLUnifGrid);
      instance.SetDestructor(&destruct_geniecLcLUnifGrid);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::UnifGrid*)
   {
      return GenerateInitInstanceLocal((::genie::UnifGrid*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::UnifGrid*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void geniecLcLUnifGrid_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::genie::UnifGrid*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void geniecLcLFunctionMap_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void geniecLcLFunctionMap_Dictionary();
   static void *new_geniecLcLFunctionMap(void *p = 0);
   static void *newArray_geniecLcLFunctionMap(Long_t size, void *p);
   static void delete_geniecLcLFunctionMap(void *p);
   static void deleteArray_geniecLcLFunctionMap(void *p);
   static void destruct_geniecLcLFunctionMap(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::FunctionMap*)
   {
      ::genie::FunctionMap *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::genie::FunctionMap),0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::FunctionMap", "./FunctionMap.h", 34,
                  typeid(::genie::FunctionMap), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &geniecLcLFunctionMap_Dictionary, isa_proxy, 0,
                  sizeof(::genie::FunctionMap) );
      instance.SetNew(&new_geniecLcLFunctionMap);
      instance.SetNewArray(&newArray_geniecLcLFunctionMap);
      instance.SetDelete(&delete_geniecLcLFunctionMap);
      instance.SetDeleteArray(&deleteArray_geniecLcLFunctionMap);
      instance.SetDestructor(&destruct_geniecLcLFunctionMap);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::FunctionMap*)
   {
      return GenerateInitInstanceLocal((::genie::FunctionMap*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::FunctionMap*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void geniecLcLFunctionMap_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::genie::FunctionMap*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void geniecLcLGridSpacing_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void geniecLcLGridSpacing_Dictionary();
   static void *new_geniecLcLGridSpacing(void *p = 0);
   static void *newArray_geniecLcLGridSpacing(Long_t size, void *p);
   static void delete_geniecLcLGridSpacing(void *p);
   static void deleteArray_geniecLcLGridSpacing(void *p);
   static void destruct_geniecLcLGridSpacing(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::GridSpacing*)
   {
      ::genie::GridSpacing *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::genie::GridSpacing),0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::GridSpacing", "/home/nathalie/ShipSoft/FairSoft/generators/genie-2.8.6/src/Numerical/GridSpacing.h", 39,
                  typeid(::genie::GridSpacing), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &geniecLcLGridSpacing_Dictionary, isa_proxy, 0,
                  sizeof(::genie::GridSpacing) );
      instance.SetNew(&new_geniecLcLGridSpacing);
      instance.SetNewArray(&newArray_geniecLcLGridSpacing);
      instance.SetDelete(&delete_geniecLcLGridSpacing);
      instance.SetDeleteArray(&deleteArray_geniecLcLGridSpacing);
      instance.SetDestructor(&destruct_geniecLcLGridSpacing);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::GridSpacing*)
   {
      return GenerateInitInstanceLocal((::genie::GridSpacing*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::GridSpacing*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void geniecLcLGridSpacing_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::genie::GridSpacing*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void geniecLcLGridDimension_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void geniecLcLGridDimension_Dictionary();
   static void delete_geniecLcLGridDimension(void *p);
   static void deleteArray_geniecLcLGridDimension(void *p);
   static void destruct_geniecLcLGridDimension(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::GridDimension*)
   {
      ::genie::GridDimension *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::genie::GridDimension),0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::GridDimension", "/home/nathalie/ShipSoft/FairSoft/generators/genie-2.8.6/src/Numerical/GridDimension.h", 27,
                  typeid(::genie::GridDimension), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &geniecLcLGridDimension_Dictionary, isa_proxy, 0,
                  sizeof(::genie::GridDimension) );
      instance.SetDelete(&delete_geniecLcLGridDimension);
      instance.SetDeleteArray(&deleteArray_geniecLcLGridDimension);
      instance.SetDestructor(&destruct_geniecLcLGridDimension);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::GridDimension*)
   {
      return GenerateInitInstanceLocal((::genie::GridDimension*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::GridDimension*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void geniecLcLGridDimension_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::genie::GridDimension*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void geniecLcLUnifGridDimension_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void geniecLcLUnifGridDimension_Dictionary();
   static void delete_geniecLcLUnifGridDimension(void *p);
   static void deleteArray_geniecLcLUnifGridDimension(void *p);
   static void destruct_geniecLcLUnifGridDimension(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::UnifGridDimension*)
   {
      ::genie::UnifGridDimension *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::genie::UnifGridDimension),0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::UnifGridDimension", "./UnifGridDimension.h", 32,
                  typeid(::genie::UnifGridDimension), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &geniecLcLUnifGridDimension_Dictionary, isa_proxy, 0,
                  sizeof(::genie::UnifGridDimension) );
      instance.SetDelete(&delete_geniecLcLUnifGridDimension);
      instance.SetDeleteArray(&deleteArray_geniecLcLUnifGridDimension);
      instance.SetDestructor(&destruct_geniecLcLUnifGridDimension);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::UnifGridDimension*)
   {
      return GenerateInitInstanceLocal((::genie::UnifGridDimension*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::UnifGridDimension*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void geniecLcLUnifGridDimension_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::genie::UnifGridDimension*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void geniecLcLGSFunc_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void geniecLcLGSFunc_Dictionary();
   static void delete_geniecLcLGSFunc(void *p);
   static void deleteArray_geniecLcLGSFunc(void *p);
   static void destruct_geniecLcLGSFunc(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::GSFunc*)
   {
      ::genie::GSFunc *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::genie::GSFunc),0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::GSFunc", "./GSFunc.h", 31,
                  typeid(::genie::GSFunc), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &geniecLcLGSFunc_Dictionary, isa_proxy, 0,
                  sizeof(::genie::GSFunc) );
      instance.SetDelete(&delete_geniecLcLGSFunc);
      instance.SetDeleteArray(&deleteArray_geniecLcLGSFunc);
      instance.SetDestructor(&destruct_geniecLcLGSFunc);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::GSFunc*)
   {
      return GenerateInitInstanceLocal((::genie::GSFunc*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::GSFunc*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void geniecLcLGSFunc_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::genie::GSFunc*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void geniecLcLIntegratorI_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void geniecLcLIntegratorI_Dictionary();
   static void delete_geniecLcLIntegratorI(void *p);
   static void deleteArray_geniecLcLIntegratorI(void *p);
   static void destruct_geniecLcLIntegratorI(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::IntegratorI*)
   {
      ::genie::IntegratorI *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::genie::IntegratorI),0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::IntegratorI", "/home/nathalie/ShipSoft/FairSoft/generators/genie-2.8.6/src/Numerical/IntegratorI.h", 29,
                  typeid(::genie::IntegratorI), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &geniecLcLIntegratorI_Dictionary, isa_proxy, 0,
                  sizeof(::genie::IntegratorI) );
      instance.SetDelete(&delete_geniecLcLIntegratorI);
      instance.SetDeleteArray(&deleteArray_geniecLcLIntegratorI);
      instance.SetDestructor(&destruct_geniecLcLIntegratorI);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::IntegratorI*)
   {
      return GenerateInitInstanceLocal((::genie::IntegratorI*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::IntegratorI*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void geniecLcLIntegratorI_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::genie::IntegratorI*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void geniecLcLSimpson2DFixN_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void geniecLcLSimpson2DFixN_Dictionary();
   static void *new_geniecLcLSimpson2DFixN(void *p = 0);
   static void *newArray_geniecLcLSimpson2DFixN(Long_t size, void *p);
   static void delete_geniecLcLSimpson2DFixN(void *p);
   static void deleteArray_geniecLcLSimpson2DFixN(void *p);
   static void destruct_geniecLcLSimpson2DFixN(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::Simpson2DFixN*)
   {
      ::genie::Simpson2DFixN *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::genie::Simpson2DFixN),0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::Simpson2DFixN", "./Simpson2DFixN.h", 32,
                  typeid(::genie::Simpson2DFixN), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &geniecLcLSimpson2DFixN_Dictionary, isa_proxy, 0,
                  sizeof(::genie::Simpson2DFixN) );
      instance.SetNew(&new_geniecLcLSimpson2DFixN);
      instance.SetNewArray(&newArray_geniecLcLSimpson2DFixN);
      instance.SetDelete(&delete_geniecLcLSimpson2DFixN);
      instance.SetDeleteArray(&deleteArray_geniecLcLSimpson2DFixN);
      instance.SetDestructor(&destruct_geniecLcLSimpson2DFixN);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::Simpson2DFixN*)
   {
      return GenerateInitInstanceLocal((::genie::Simpson2DFixN*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::Simpson2DFixN*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void geniecLcLSimpson2DFixN_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::genie::Simpson2DFixN*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void geniecLcLSimpson2D_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void geniecLcLSimpson2D_Dictionary();
   static void *new_geniecLcLSimpson2D(void *p = 0);
   static void *newArray_geniecLcLSimpson2D(Long_t size, void *p);
   static void delete_geniecLcLSimpson2D(void *p);
   static void deleteArray_geniecLcLSimpson2D(void *p);
   static void destruct_geniecLcLSimpson2D(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::Simpson2D*)
   {
      ::genie::Simpson2D *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::genie::Simpson2D),0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::Simpson2D", "./Simpson2D.h", 35,
                  typeid(::genie::Simpson2D), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &geniecLcLSimpson2D_Dictionary, isa_proxy, 0,
                  sizeof(::genie::Simpson2D) );
      instance.SetNew(&new_geniecLcLSimpson2D);
      instance.SetNewArray(&newArray_geniecLcLSimpson2D);
      instance.SetDelete(&delete_geniecLcLSimpson2D);
      instance.SetDeleteArray(&deleteArray_geniecLcLSimpson2D);
      instance.SetDestructor(&destruct_geniecLcLSimpson2D);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::Simpson2D*)
   {
      return GenerateInitInstanceLocal((::genie::Simpson2D*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::Simpson2D*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void geniecLcLSimpson2D_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::genie::Simpson2D*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void geniecLcLBLI2DGrid_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_geniecLcLBLI2DGrid(void *p);
   static void deleteArray_geniecLcLBLI2DGrid(void *p);
   static void destruct_geniecLcLBLI2DGrid(void *p);
   static void streamer_geniecLcLBLI2DGrid(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::BLI2DGrid*)
   {
      ::genie::BLI2DGrid *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::genie::BLI2DGrid >(0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::BLI2DGrid", ::genie::BLI2DGrid::Class_Version(), "./BLI2D.h", 23,
                  typeid(::genie::BLI2DGrid), ::ROOT::DefineBehavior(ptr, ptr),
                  &::genie::BLI2DGrid::Dictionary, isa_proxy, 0,
                  sizeof(::genie::BLI2DGrid) );
      instance.SetDelete(&delete_geniecLcLBLI2DGrid);
      instance.SetDeleteArray(&deleteArray_geniecLcLBLI2DGrid);
      instance.SetDestructor(&destruct_geniecLcLBLI2DGrid);
      instance.SetStreamerFunc(&streamer_geniecLcLBLI2DGrid);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::BLI2DGrid*)
   {
      return GenerateInitInstanceLocal((::genie::BLI2DGrid*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::BLI2DGrid*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void geniecLcLBLI2DUnifGrid_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_geniecLcLBLI2DUnifGrid(void *p = 0);
   static void *newArray_geniecLcLBLI2DUnifGrid(Long_t size, void *p);
   static void delete_geniecLcLBLI2DUnifGrid(void *p);
   static void deleteArray_geniecLcLBLI2DUnifGrid(void *p);
   static void destruct_geniecLcLBLI2DUnifGrid(void *p);
   static void streamer_geniecLcLBLI2DUnifGrid(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::BLI2DUnifGrid*)
   {
      ::genie::BLI2DUnifGrid *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::genie::BLI2DUnifGrid >(0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::BLI2DUnifGrid", ::genie::BLI2DUnifGrid::Class_Version(), "./BLI2D.h", 73,
                  typeid(::genie::BLI2DUnifGrid), ::ROOT::DefineBehavior(ptr, ptr),
                  &::genie::BLI2DUnifGrid::Dictionary, isa_proxy, 0,
                  sizeof(::genie::BLI2DUnifGrid) );
      instance.SetNew(&new_geniecLcLBLI2DUnifGrid);
      instance.SetNewArray(&newArray_geniecLcLBLI2DUnifGrid);
      instance.SetDelete(&delete_geniecLcLBLI2DUnifGrid);
      instance.SetDeleteArray(&deleteArray_geniecLcLBLI2DUnifGrid);
      instance.SetDestructor(&destruct_geniecLcLBLI2DUnifGrid);
      instance.SetStreamerFunc(&streamer_geniecLcLBLI2DUnifGrid);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::BLI2DUnifGrid*)
   {
      return GenerateInitInstanceLocal((::genie::BLI2DUnifGrid*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::BLI2DUnifGrid*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void geniecLcLBLI2DNonUnifGrid_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_geniecLcLBLI2DNonUnifGrid(void *p = 0);
   static void *newArray_geniecLcLBLI2DNonUnifGrid(Long_t size, void *p);
   static void delete_geniecLcLBLI2DNonUnifGrid(void *p);
   static void deleteArray_geniecLcLBLI2DNonUnifGrid(void *p);
   static void destruct_geniecLcLBLI2DNonUnifGrid(void *p);
   static void streamer_geniecLcLBLI2DNonUnifGrid(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::BLI2DNonUnifGrid*)
   {
      ::genie::BLI2DNonUnifGrid *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::genie::BLI2DNonUnifGrid >(0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::BLI2DNonUnifGrid", ::genie::BLI2DNonUnifGrid::Class_Version(), "./BLI2D.h", 97,
                  typeid(::genie::BLI2DNonUnifGrid), ::ROOT::DefineBehavior(ptr, ptr),
                  &::genie::BLI2DNonUnifGrid::Dictionary, isa_proxy, 0,
                  sizeof(::genie::BLI2DNonUnifGrid) );
      instance.SetNew(&new_geniecLcLBLI2DNonUnifGrid);
      instance.SetNewArray(&newArray_geniecLcLBLI2DNonUnifGrid);
      instance.SetDelete(&delete_geniecLcLBLI2DNonUnifGrid);
      instance.SetDeleteArray(&deleteArray_geniecLcLBLI2DNonUnifGrid);
      instance.SetDestructor(&destruct_geniecLcLBLI2DNonUnifGrid);
      instance.SetStreamerFunc(&streamer_geniecLcLBLI2DNonUnifGrid);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::BLI2DNonUnifGrid*)
   {
      return GenerateInitInstanceLocal((::genie::BLI2DNonUnifGrid*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::BLI2DNonUnifGrid*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void geniecLcLGVFunc_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void geniecLcLGVFunc_Dictionary();
   static void delete_geniecLcLGVFunc(void *p);
   static void deleteArray_geniecLcLGVFunc(void *p);
   static void destruct_geniecLcLGVFunc(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::GVFunc*)
   {
      ::genie::GVFunc *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::genie::GVFunc),0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::GVFunc", "./GVFunc.h", 31,
                  typeid(::genie::GVFunc), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &geniecLcLGVFunc_Dictionary, isa_proxy, 0,
                  sizeof(::genie::GVFunc) );
      instance.SetDelete(&delete_geniecLcLGVFunc);
      instance.SetDeleteArray(&deleteArray_geniecLcLGVFunc);
      instance.SetDestructor(&destruct_geniecLcLGVFunc);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::GVFunc*)
   {
      return GenerateInitInstanceLocal((::genie::GVFunc*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::GVFunc*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void geniecLcLGVFunc_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::genie::GVFunc*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void geniecLcLSimpson1D_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void geniecLcLSimpson1D_Dictionary();
   static void *new_geniecLcLSimpson1D(void *p = 0);
   static void *newArray_geniecLcLSimpson1D(Long_t size, void *p);
   static void delete_geniecLcLSimpson1D(void *p);
   static void deleteArray_geniecLcLSimpson1D(void *p);
   static void destruct_geniecLcLSimpson1D(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::Simpson1D*)
   {
      ::genie::Simpson1D *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::genie::Simpson1D),0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::Simpson1D", "./Simpson1D.h", 36,
                  typeid(::genie::Simpson1D), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &geniecLcLSimpson1D_Dictionary, isa_proxy, 0,
                  sizeof(::genie::Simpson1D) );
      instance.SetNew(&new_geniecLcLSimpson1D);
      instance.SetNewArray(&newArray_geniecLcLSimpson1D);
      instance.SetDelete(&delete_geniecLcLSimpson1D);
      instance.SetDeleteArray(&deleteArray_geniecLcLSimpson1D);
      instance.SetDestructor(&destruct_geniecLcLSimpson1D);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::Simpson1D*)
   {
      return GenerateInitInstanceLocal((::genie::Simpson1D*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::Simpson1D*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void geniecLcLSimpson1D_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::genie::Simpson1D*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

      namespace genie {
//______________________________________________________________________________
atomic_TClass_ptr Spline::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Spline::Class_Name()
{
   return "genie::Spline";
}

//______________________________________________________________________________
const char *Spline::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genie::Spline*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Spline::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genie::Spline*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Spline::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genie::Spline*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Spline::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genie::Spline*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace genie
      namespace genie {
//______________________________________________________________________________
atomic_TClass_ptr BLI2DGrid::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *BLI2DGrid::Class_Name()
{
   return "genie::BLI2DGrid";
}

//______________________________________________________________________________
const char *BLI2DGrid::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genie::BLI2DGrid*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BLI2DGrid::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genie::BLI2DGrid*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BLI2DGrid::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genie::BLI2DGrid*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BLI2DGrid::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genie::BLI2DGrid*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace genie
      namespace genie {
//______________________________________________________________________________
atomic_TClass_ptr BLI2DUnifGrid::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *BLI2DUnifGrid::Class_Name()
{
   return "genie::BLI2DUnifGrid";
}

//______________________________________________________________________________
const char *BLI2DUnifGrid::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genie::BLI2DUnifGrid*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BLI2DUnifGrid::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genie::BLI2DUnifGrid*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BLI2DUnifGrid::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genie::BLI2DUnifGrid*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BLI2DUnifGrid::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genie::BLI2DUnifGrid*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace genie
      namespace genie {
//______________________________________________________________________________
atomic_TClass_ptr BLI2DNonUnifGrid::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *BLI2DNonUnifGrid::Class_Name()
{
   return "genie::BLI2DNonUnifGrid";
}

//______________________________________________________________________________
const char *BLI2DNonUnifGrid::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genie::BLI2DNonUnifGrid*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BLI2DNonUnifGrid::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genie::BLI2DNonUnifGrid*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BLI2DNonUnifGrid::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genie::BLI2DNonUnifGrid*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BLI2DNonUnifGrid::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genie::BLI2DNonUnifGrid*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace genie
namespace ROOTDict {
} // end of namespace ROOTDict for class ::genie::RandomGen

      namespace genie {
//______________________________________________________________________________
void Spline::Streamer(TBuffer &R__b)
{
   // Stream an object of class genie::Spline.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::genie::Spline thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      { TString R__str; R__str.Streamer(R__b); fName = R__str.Data(); }
      R__b >> fNKnots;
      R__b >> fXMin;
      R__b >> fXMax;
      R__b >> fYMax;
      R__b >> fInterpolator;
      R__b >> fYCanBeNegative;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      { TString R__str = fName.c_str(); R__str.Streamer(R__b);}
      R__b << fNKnots;
      R__b << fXMin;
      R__b << fXMax;
      R__b << fYMax;
      R__b << fInterpolator;
      R__b << fYCanBeNegative;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace genie
//______________________________________________________________________________
      namespace genie {
void Spline::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class genie::Spline.
      TClass *R__cl = ::genie::Spline::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fName", (void*)&fName);
      R__insp.InspectMember("string", (void*)&fName, "fName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNKnots", &fNKnots);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXMin", &fXMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXMax", &fXMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYMax", &fYMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fInterpolator", &fInterpolator);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYCanBeNegative", &fYCanBeNegative);
      TObject::ShowMembers(R__insp);
}

} // namespace genie
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_geniecLcLSpline(void *p) {
      return  p ? new(p) ::genie::Spline : new ::genie::Spline;
   }
   static void *newArray_geniecLcLSpline(Long_t nElements, void *p) {
      return p ? new(p) ::genie::Spline[nElements] : new ::genie::Spline[nElements];
   }
   // Wrapper around operator delete
   static void delete_geniecLcLSpline(void *p) {
      delete ((::genie::Spline*)p);
   }
   static void deleteArray_geniecLcLSpline(void *p) {
      delete [] ((::genie::Spline*)p);
   }
   static void destruct_geniecLcLSpline(void *p) {
      typedef ::genie::Spline current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_geniecLcLSpline(TBuffer &buf, void *obj) {
      ((::genie::Spline*)obj)->::genie::Spline::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::genie::Spline

      namespace genie {
//______________________________________________________________________________
void BLI2DGrid::Streamer(TBuffer &R__b)
{
   // Stream an object of class genie::BLI2DGrid.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::genie::BLI2DGrid thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> fNX;
      R__b >> fNY;
      R__b >> fNZ;
      delete [] fX;
      fX = new double[fNX];
      R__b.ReadFastArray(fX,fNX);
      delete [] fY;
      fY = new double[fNY];
      R__b.ReadFastArray(fY,fNY);
      delete [] fZ;
      fZ = new double[fNZ];
      R__b.ReadFastArray(fZ,fNZ);
      R__b >> fDX;
      R__b >> fDY;
      R__b >> fXmin;
      R__b >> fXmax;
      R__b >> fYmin;
      R__b >> fYmax;
      R__b >> fZmin;
      R__b >> fZmax;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << fNX;
      R__b << fNY;
      R__b << fNZ;
      R__b.WriteFastArray(fX,fNX);
      R__b.WriteFastArray(fY,fNY);
      R__b.WriteFastArray(fZ,fNZ);
      R__b << fDX;
      R__b << fDY;
      R__b << fXmin;
      R__b << fXmax;
      R__b << fYmin;
      R__b << fYmax;
      R__b << fZmin;
      R__b << fZmax;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace genie
//______________________________________________________________________________
      namespace genie {
void BLI2DGrid::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class genie::BLI2DGrid.
      TClass *R__cl = ::genie::BLI2DGrid::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNX", &fNX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNY", &fNY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNZ", &fNZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fX", &fX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fY", &fY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fZ", &fZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDX", &fDX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDY", &fDY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXmin", &fXmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXmax", &fXmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYmin", &fYmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYmax", &fYmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZmin", &fZmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZmax", &fZmax);
      TObject::ShowMembers(R__insp);
}

} // namespace genie
namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_geniecLcLBLI2DGrid(void *p) {
      delete ((::genie::BLI2DGrid*)p);
   }
   static void deleteArray_geniecLcLBLI2DGrid(void *p) {
      delete [] ((::genie::BLI2DGrid*)p);
   }
   static void destruct_geniecLcLBLI2DGrid(void *p) {
      typedef ::genie::BLI2DGrid current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_geniecLcLBLI2DGrid(TBuffer &buf, void *obj) {
      ((::genie::BLI2DGrid*)obj)->::genie::BLI2DGrid::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::genie::BLI2DGrid

      namespace genie {
//______________________________________________________________________________
void BLI2DUnifGrid::Streamer(TBuffer &R__b)
{
   // Stream an object of class genie::BLI2DUnifGrid.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::genie::BLI2DUnifGrid thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef genie::BLI2DGrid baseClass0;
      baseClass0::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      //This works around a msvc bug and should be harmless on other platforms
      typedef genie::BLI2DGrid baseClass0;
      baseClass0::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace genie
//______________________________________________________________________________
      namespace genie {
void BLI2DUnifGrid::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class genie::BLI2DUnifGrid.
      TClass *R__cl = ::genie::BLI2DUnifGrid::IsA();
      if (R__cl || R__insp.IsA()) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef genie::BLI2DGrid baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace genie
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_geniecLcLBLI2DUnifGrid(void *p) {
      return  p ? new(p) ::genie::BLI2DUnifGrid : new ::genie::BLI2DUnifGrid;
   }
   static void *newArray_geniecLcLBLI2DUnifGrid(Long_t nElements, void *p) {
      return p ? new(p) ::genie::BLI2DUnifGrid[nElements] : new ::genie::BLI2DUnifGrid[nElements];
   }
   // Wrapper around operator delete
   static void delete_geniecLcLBLI2DUnifGrid(void *p) {
      delete ((::genie::BLI2DUnifGrid*)p);
   }
   static void deleteArray_geniecLcLBLI2DUnifGrid(void *p) {
      delete [] ((::genie::BLI2DUnifGrid*)p);
   }
   static void destruct_geniecLcLBLI2DUnifGrid(void *p) {
      typedef ::genie::BLI2DUnifGrid current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_geniecLcLBLI2DUnifGrid(TBuffer &buf, void *obj) {
      ((::genie::BLI2DUnifGrid*)obj)->::genie::BLI2DUnifGrid::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::genie::BLI2DUnifGrid

      namespace genie {
//______________________________________________________________________________
void BLI2DNonUnifGrid::Streamer(TBuffer &R__b)
{
   // Stream an object of class genie::BLI2DNonUnifGrid.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::genie::BLI2DNonUnifGrid thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef genie::BLI2DGrid baseClass0;
      baseClass0::Streamer(R__b);
      R__b >> fNFillX;
      R__b >> fNFillY;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      //This works around a msvc bug and should be harmless on other platforms
      typedef genie::BLI2DGrid baseClass0;
      baseClass0::Streamer(R__b);
      R__b << fNFillX;
      R__b << fNFillY;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace genie
//______________________________________________________________________________
      namespace genie {
void BLI2DNonUnifGrid::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class genie::BLI2DNonUnifGrid.
      TClass *R__cl = ::genie::BLI2DNonUnifGrid::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNFillX", &fNFillX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNFillY", &fNFillY);
      //This works around a msvc bug and should be harmless on other platforms
      typedef genie::BLI2DGrid baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace genie
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_geniecLcLBLI2DNonUnifGrid(void *p) {
      return  p ? new(p) ::genie::BLI2DNonUnifGrid : new ::genie::BLI2DNonUnifGrid;
   }
   static void *newArray_geniecLcLBLI2DNonUnifGrid(Long_t nElements, void *p) {
      return p ? new(p) ::genie::BLI2DNonUnifGrid[nElements] : new ::genie::BLI2DNonUnifGrid[nElements];
   }
   // Wrapper around operator delete
   static void delete_geniecLcLBLI2DNonUnifGrid(void *p) {
      delete ((::genie::BLI2DNonUnifGrid*)p);
   }
   static void deleteArray_geniecLcLBLI2DNonUnifGrid(void *p) {
      delete [] ((::genie::BLI2DNonUnifGrid*)p);
   }
   static void destruct_geniecLcLBLI2DNonUnifGrid(void *p) {
      typedef ::genie::BLI2DNonUnifGrid current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_geniecLcLBLI2DNonUnifGrid(TBuffer &buf, void *obj) {
      ((::genie::BLI2DNonUnifGrid*)obj)->::genie::BLI2DNonUnifGrid::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::genie::BLI2DNonUnifGrid

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_geniecLcLGridSpacing(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::GridSpacing : new ::genie::GridSpacing;
   }
   static void *newArray_geniecLcLGridSpacing(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::GridSpacing[nElements] : new ::genie::GridSpacing[nElements];
   }
   // Wrapper around operator delete
   static void delete_geniecLcLGridSpacing(void *p) {
      delete ((::genie::GridSpacing*)p);
   }
   static void deleteArray_geniecLcLGridSpacing(void *p) {
      delete [] ((::genie::GridSpacing*)p);
   }
   static void destruct_geniecLcLGridSpacing(void *p) {
      typedef ::genie::GridSpacing current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genie::GridSpacing

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_geniecLcLGridDimension(void *p) {
      delete ((::genie::GridDimension*)p);
   }
   static void deleteArray_geniecLcLGridDimension(void *p) {
      delete [] ((::genie::GridDimension*)p);
   }
   static void destruct_geniecLcLGridDimension(void *p) {
      typedef ::genie::GridDimension current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genie::GridDimension

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_geniecLcLUnifGridDimension(void *p) {
      delete ((::genie::UnifGridDimension*)p);
   }
   static void deleteArray_geniecLcLUnifGridDimension(void *p) {
      delete [] ((::genie::UnifGridDimension*)p);
   }
   static void destruct_geniecLcLUnifGridDimension(void *p) {
      typedef ::genie::UnifGridDimension current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genie::UnifGridDimension

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_geniecLcLUnifGrid(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::UnifGrid : new ::genie::UnifGrid;
   }
   static void *newArray_geniecLcLUnifGrid(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::UnifGrid[nElements] : new ::genie::UnifGrid[nElements];
   }
   // Wrapper around operator delete
   static void delete_geniecLcLUnifGrid(void *p) {
      delete ((::genie::UnifGrid*)p);
   }
   static void deleteArray_geniecLcLUnifGrid(void *p) {
      delete [] ((::genie::UnifGrid*)p);
   }
   static void destruct_geniecLcLUnifGrid(void *p) {
      typedef ::genie::UnifGrid current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genie::UnifGrid

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_geniecLcLGBFunc(void *p) {
      delete ((::genie::GBFunc*)p);
   }
   static void deleteArray_geniecLcLGBFunc(void *p) {
      delete [] ((::genie::GBFunc*)p);
   }
   static void destruct_geniecLcLGBFunc(void *p) {
      typedef ::genie::GBFunc current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genie::GBFunc

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_geniecLcLGSFunc(void *p) {
      delete ((::genie::GSFunc*)p);
   }
   static void deleteArray_geniecLcLGSFunc(void *p) {
      delete [] ((::genie::GSFunc*)p);
   }
   static void destruct_geniecLcLGSFunc(void *p) {
      typedef ::genie::GSFunc current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genie::GSFunc

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_geniecLcLGVFunc(void *p) {
      delete ((::genie::GVFunc*)p);
   }
   static void deleteArray_geniecLcLGVFunc(void *p) {
      delete [] ((::genie::GVFunc*)p);
   }
   static void destruct_geniecLcLGVFunc(void *p) {
      typedef ::genie::GVFunc current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genie::GVFunc

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_geniecLcLFunctionMap(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::FunctionMap : new ::genie::FunctionMap;
   }
   static void *newArray_geniecLcLFunctionMap(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::FunctionMap[nElements] : new ::genie::FunctionMap[nElements];
   }
   // Wrapper around operator delete
   static void delete_geniecLcLFunctionMap(void *p) {
      delete ((::genie::FunctionMap*)p);
   }
   static void deleteArray_geniecLcLFunctionMap(void *p) {
      delete [] ((::genie::FunctionMap*)p);
   }
   static void destruct_geniecLcLFunctionMap(void *p) {
      typedef ::genie::FunctionMap current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genie::FunctionMap

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_geniecLcLIntegratorI(void *p) {
      delete ((::genie::IntegratorI*)p);
   }
   static void deleteArray_geniecLcLIntegratorI(void *p) {
      delete [] ((::genie::IntegratorI*)p);
   }
   static void destruct_geniecLcLIntegratorI(void *p) {
      typedef ::genie::IntegratorI current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genie::IntegratorI

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_geniecLcLSimpson1D(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::Simpson1D : new ::genie::Simpson1D;
   }
   static void *newArray_geniecLcLSimpson1D(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::Simpson1D[nElements] : new ::genie::Simpson1D[nElements];
   }
   // Wrapper around operator delete
   static void delete_geniecLcLSimpson1D(void *p) {
      delete ((::genie::Simpson1D*)p);
   }
   static void deleteArray_geniecLcLSimpson1D(void *p) {
      delete [] ((::genie::Simpson1D*)p);
   }
   static void destruct_geniecLcLSimpson1D(void *p) {
      typedef ::genie::Simpson1D current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genie::Simpson1D

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_geniecLcLSimpson2D(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::Simpson2D : new ::genie::Simpson2D;
   }
   static void *newArray_geniecLcLSimpson2D(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::Simpson2D[nElements] : new ::genie::Simpson2D[nElements];
   }
   // Wrapper around operator delete
   static void delete_geniecLcLSimpson2D(void *p) {
      delete ((::genie::Simpson2D*)p);
   }
   static void deleteArray_geniecLcLSimpson2D(void *p) {
      delete [] ((::genie::Simpson2D*)p);
   }
   static void destruct_geniecLcLSimpson2D(void *p) {
      typedef ::genie::Simpson2D current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genie::Simpson2D

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_geniecLcLSimpson2DFixN(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::Simpson2DFixN : new ::genie::Simpson2DFixN;
   }
   static void *newArray_geniecLcLSimpson2DFixN(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::Simpson2DFixN[nElements] : new ::genie::Simpson2DFixN[nElements];
   }
   // Wrapper around operator delete
   static void delete_geniecLcLSimpson2DFixN(void *p) {
      delete ((::genie::Simpson2DFixN*)p);
   }
   static void deleteArray_geniecLcLSimpson2DFixN(void *p) {
      delete [] ((::genie::Simpson2DFixN*)p);
   }
   static void destruct_geniecLcLSimpson2DFixN(void *p) {
      typedef ::genie::Simpson2DFixN current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genie::Simpson2DFixN

/********************************************************
* _ROOT_DICT_Numerical.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtable_ROOT_DICT_Numerical();

extern "C" void G__set_cpp_environment_ROOT_DICT_Numerical() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("Spline.h");
  G__add_compiledheader("GFunc.h");
  G__add_compiledheader("RandomGen.h");
  G__add_compiledheader("GBFunc.h");
  G__add_compiledheader("FunctionMap.h");
  G__add_compiledheader("UnifGridDimension.h");
  G__add_compiledheader("Simpson2DFixN.h");
  G__add_compiledheader("Simpson2D.h");
  G__add_compiledheader("BLI2D.h");
  G__add_compiledheader("GridDimension.h");
  G__add_compiledheader("IntegratorI.h");
  G__add_compiledheader("GSFunc.h");
  G__add_compiledheader("GVFunc.h");
  G__add_compiledheader("Simpson1D.h");
  G__add_compiledheader("UnifGrid.h");
  G__cpp_reset_tagtable_ROOT_DICT_Numerical();
}
#include <new>
extern "C" int G__cpp_dllrev_ROOT_DICT_Numerical() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* genie */
static int G___ROOT_DICT_Numerical_208_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = genie::operator<<(*(ostream*) libp->para[0].ref, *(genie::Spline*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_208_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = genie::operator<<(*(ostream*) libp->para[0].ref, *(genie::UnifGridDimension*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_208_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = genie::operator<<(*(ostream*) libp->para[0].ref, *(genie::AlgId*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_208_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = genie::operator<<(*(ostream*) libp->para[0].ref, *(genie::Registry*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_208_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = genie::operator<<(*(ostream*) libp->para[0].ref, *(genie::Algorithm*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_208_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = genie::operator<<(*(ostream*) libp->para[0].ref, *(genie::UnifGrid*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::Spline */
static int G___ROOT_DICT_Numerical_209_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::Spline* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::Spline[n];
     } else {
       p = new((void*) gvp) genie::Spline[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::Spline;
     } else {
       p = new((void*) gvp) genie::Spline;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::Spline* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::Spline(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (bool) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) genie::Spline(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (bool) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::Spline(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
     } else {
       p = new((void*) gvp) genie::Spline(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::Spline(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
     } else {
       p = new((void*) gvp) genie::Spline(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::Spline(*((string*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) genie::Spline(*((string*) G__int(libp->para[0])));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::Spline* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::Spline(
(TNtupleD*) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
     } else {
       p = new((void*) gvp) genie::Spline(
(TNtupleD*) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::Spline((TNtupleD*) G__int(libp->para[0]), *((string*) G__int(libp->para[1])));
     } else {
       p = new((void*) gvp) genie::Spline((TNtupleD*) G__int(libp->para[0]), *((string*) G__int(libp->para[1])));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::Spline* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::Spline(
(TTree*) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
     } else {
       p = new((void*) gvp) genie::Spline(
(TTree*) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::Spline((TTree*) G__int(libp->para[0]), *((string*) G__int(libp->para[1])));
     } else {
       p = new((void*) gvp) genie::Spline((TTree*) G__int(libp->para[0]), *((string*) G__int(libp->para[1])));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::Spline* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genie::Spline((TSQLServer*) G__int(libp->para[0]), *((string*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) genie::Spline((TSQLServer*) G__int(libp->para[0]), *((string*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::Spline* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genie::Spline(
(int) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) genie::Spline(
(int) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::Spline* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genie::Spline(
(int) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) genie::Spline(
(int) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::Spline* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genie::Spline(*(genie::Spline*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) genie::Spline(*(genie::Spline*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::Spline* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genie::Spline(*(TSpline3*) libp->para[0].ref, (int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) genie::Spline(*(TSpline3*) libp->para[0].ref, (int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((genie::Spline*) G__getstructoffset())->LoadFromXmlFile(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((genie::Spline*) G__getstructoffset())->LoadFromAsciiFile(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((genie::Spline*) G__getstructoffset())->LoadFromNtuple((TNtupleD*) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2]))));
      break;
   case 2:
      G__letint(result7, 103, (long) ((genie::Spline*) G__getstructoffset())->LoadFromNtuple((TNtupleD*) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((genie::Spline*) G__getstructoffset())->LoadFromTree((TTree*) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2]))));
      break;
   case 2:
      G__letint(result7, 103, (long) ((genie::Spline*) G__getstructoffset())->LoadFromTree((TTree*) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((genie::Spline*) G__getstructoffset())->LoadFromDBase((TSQLServer*) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((genie::Spline*) G__getstructoffset())->LoadFromTSpline3(*(TSpline3*) libp->para[0].ref, (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const genie::Spline*) G__getstructoffset())->NKnots());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const genie::Spline*) G__getstructoffset())->GetKnot((int) G__int(libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genie::Spline*) G__getstructoffset())->GetKnotX((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genie::Spline*) G__getstructoffset())->GetKnotY((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genie::Spline*) G__getstructoffset())->XMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genie::Spline*) G__getstructoffset())->XMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genie::Spline*) G__getstructoffset())->YMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genie::Spline*) G__getstructoffset())->Evaluate((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const genie::Spline*) G__getstructoffset())->IsWithinValidRange((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genie::Spline*) G__getstructoffset())->SetName(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const genie::Spline*) G__getstructoffset())->Name();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genie::Spline*) G__getstructoffset())->YCanBeNegative((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((const genie::Spline*) G__getstructoffset())->SaveAsXml(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), *((string*) G__int(libp->para[3])));
      G__setnull(result7);
      break;
   case 3:
      ((const genie::Spline*) G__getstructoffset())->SaveAsXml(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((const genie::Spline*) G__getstructoffset())->SaveAsXml(*(ofstream*) libp->para[0].ref, *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), *((string*) G__int(libp->para[3]))
, (bool) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((const genie::Spline*) G__getstructoffset())->SaveAsXml(*(ofstream*) libp->para[0].ref, *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), *((string*) G__int(libp->para[3])));
      G__setnull(result7);
      break;
   case 3:
      ((const genie::Spline*) G__getstructoffset())->SaveAsXml(*(ofstream*) libp->para[0].ref, *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((const genie::Spline*) G__getstructoffset())->SaveAsText(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      ((const genie::Spline*) G__getstructoffset())->SaveAsText(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((const genie::Spline*) G__getstructoffset())->SaveAsROOT(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((const genie::Spline*) G__getstructoffset())->SaveAsROOT(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      ((const genie::Spline*) G__getstructoffset())->SaveAsROOT(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 85, (long) ((const genie::Spline*) G__getstructoffset())->GetAsTGraph((int) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (bool) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) ((const genie::Spline*) G__getstructoffset())->GetAsTGraph((int) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (bool) G__int(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((const genie::Spline*) G__getstructoffset())->GetAsTGraph((int) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (bool) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((const genie::Spline*) G__getstructoffset())->GetAsTGraph((int) G__int(libp->para[0]), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((const genie::Spline*) G__getstructoffset())->GetAsTGraph((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((const genie::Spline*) G__getstructoffset())->GetAsTGraph());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const genie::Spline*) G__getstructoffset())->GetAsTSpline());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((const genie::Spline*) G__getstructoffset())->FindClosestKnot((double) G__double(libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), (Option_t*) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((const genie::Spline*) G__getstructoffset())->FindClosestKnot((double) G__double(libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((const genie::Spline*) G__getstructoffset())->ClosestKnotValueIsZero((double) G__double(libp->para[0]), (Option_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((const genie::Spline*) G__getstructoffset())->ClosestKnotValueIsZero((double) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((genie::Spline*) G__getstructoffset())->Add(*(genie::Spline*) libp->para[0].ref, (double) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((genie::Spline*) G__getstructoffset())->Add(*(genie::Spline*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((genie::Spline*) G__getstructoffset())->Multiply(*(genie::Spline*) libp->para[0].ref, (double) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((genie::Spline*) G__getstructoffset())->Multiply(*(genie::Spline*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((genie::Spline*) G__getstructoffset())->Divide(*(genie::Spline*) libp->para[0].ref, (double) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((genie::Spline*) G__getstructoffset())->Divide(*(genie::Spline*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genie::Spline*) G__getstructoffset())->Add((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genie::Spline*) G__getstructoffset())->Multiply((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genie::Spline*) G__getstructoffset())->Divide((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const genie::Spline*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) genie::Spline::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genie::Spline::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) genie::Spline::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      genie::Spline::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genie::Spline*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genie::Spline::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genie::Spline::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genie::Spline::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_209_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genie::Spline::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genie::Spline G__TgeniecLcLSpline;
static int G___ROOT_DICT_Numerical_209_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genie::Spline*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genie::Spline*) (soff+(sizeof(genie::Spline)*i)))->~G__TgeniecLcLSpline();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genie::Spline*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genie::Spline*) (soff))->~G__TgeniecLcLSpline();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_Numerical_209_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::Spline* dest = (genie::Spline*) G__getstructoffset();
   *dest = *(genie::Spline*) libp->para[0].ref;
   const genie::Spline& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::RandomGen */
static int G___ROOT_DICT_Numerical_220_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) genie::RandomGen::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_220_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRandom3& obj = ((const genie::RandomGen*) G__getstructoffset())->RndKine();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_220_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRandom3& obj = ((const genie::RandomGen*) G__getstructoffset())->RndHadro();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_220_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRandom3& obj = ((const genie::RandomGen*) G__getstructoffset())->RndDec();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_220_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRandom3& obj = ((const genie::RandomGen*) G__getstructoffset())->RndFsi();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_220_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRandom3& obj = ((const genie::RandomGen*) G__getstructoffset())->RndLep();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_220_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRandom3& obj = ((const genie::RandomGen*) G__getstructoffset())->RndISel();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_220_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRandom3& obj = ((const genie::RandomGen*) G__getstructoffset())->RndGeom();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_220_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRandom3& obj = ((const genie::RandomGen*) G__getstructoffset())->RndFlux();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_220_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRandom3& obj = ((const genie::RandomGen*) G__getstructoffset())->RndEvg();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_220_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRandom3& obj = ((const genie::RandomGen*) G__getstructoffset())->RndNum();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_220_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRandom3& obj = ((const genie::RandomGen*) G__getstructoffset())->RndGen();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_220_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((const genie::RandomGen*) G__getstructoffset())->GetSeed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_220_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genie::RandomGen*) G__getstructoffset())->SetSeed((long) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_Numerical_220_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::RandomGen* dest = (genie::RandomGen*) G__getstructoffset();
   *dest = *(genie::RandomGen*) libp->para[0].ref;
   const genie::RandomGen& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::GBFunc */
static int G___ROOT_DICT_Numerical_222_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((genie::GBFunc*) G__getstructoffset())->operator()(*(vector<double>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genie::GBFunc G__TgeniecLcLGBFunc;
static int G___ROOT_DICT_Numerical_222_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genie::GBFunc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genie::GBFunc*) (soff+(sizeof(genie::GBFunc)*i)))->~G__TgeniecLcLGBFunc();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genie::GBFunc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genie::GBFunc*) (soff))->~G__TgeniecLcLGBFunc();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_Numerical_222_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::GBFunc* dest = (genie::GBFunc*) G__getstructoffset();
   *dest = *(genie::GBFunc*) libp->para[0].ref;
   const genie::GBFunc& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::UnifGrid */
static int G___ROOT_DICT_Numerical_458_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::UnifGrid* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::UnifGrid[n];
     } else {
       p = new((void*) gvp) genie::UnifGrid[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::UnifGrid;
     } else {
       p = new((void*) gvp) genie::UnifGrid;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLUnifGrid));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_458_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::UnifGrid* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::UnifGrid(
*(genie::GSFunc*) libp->para[0].ref, (genie::GridSpacing_t) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) genie::UnifGrid(
*(genie::GSFunc*) libp->para[0].ref, (genie::GridSpacing_t) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::UnifGrid(*(genie::GSFunc*) libp->para[0].ref, (genie::GridSpacing_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) genie::UnifGrid(*(genie::GSFunc*) libp->para[0].ref, (genie::GridSpacing_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::UnifGrid(*(genie::GSFunc*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) genie::UnifGrid(*(genie::GSFunc*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLUnifGrid));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_458_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::UnifGrid* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genie::UnifGrid(*(genie::UnifGrid*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) genie::UnifGrid(*(genie::UnifGrid*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLUnifGrid));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_458_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genie::UnifGrid*) G__getstructoffset())->Coord((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_458_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const genie::UnifGrid*) G__getstructoffset())->NPoints());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_458_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const genie::UnifGrid*) G__getstructoffset())->Point((unsigned int) G__int(libp->para[0]), *(vector<unsigned int>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_458_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((const genie::UnifGrid*) G__getstructoffset())->UId(*(vector<unsigned int>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_458_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((const genie::UnifGrid*) G__getstructoffset())->UId(*(vector<double>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_458_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const genie::Registry& obj = ((genie::UnifGrid*) G__getstructoffset())->GridAttributes();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_458_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const genie::UnifGrid*) G__getstructoffset())->GetNDimensions());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_458_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genie::UnifGrid*) G__getstructoffset())->AddDimension(*(genie::UnifGridDimension*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_458_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((genie::UnifGrid*) G__getstructoffset())->GridDimension((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_458_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const genie::UnifGrid& obj = ((genie::UnifGrid*) G__getstructoffset())->operator=(*(genie::UnifGrid*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_458_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genie::UnifGrid*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_458_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const genie::UnifGrid*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_458_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genie::UnifGrid*) G__getstructoffset())->Copy(*(genie::UnifGrid*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_458_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genie::UnifGrid*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_458_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const genie::UnifGrid*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genie::UnifGrid G__TgeniecLcLUnifGrid;
static int G___ROOT_DICT_Numerical_458_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genie::UnifGrid*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genie::UnifGrid*) (soff+(sizeof(genie::UnifGrid)*i)))->~G__TgeniecLcLUnifGrid();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genie::UnifGrid*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genie::UnifGrid*) (soff))->~G__TgeniecLcLUnifGrid();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::FunctionMap */
static int G___ROOT_DICT_Numerical_459_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::FunctionMap* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::FunctionMap[n];
     } else {
       p = new((void*) gvp) genie::FunctionMap[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::FunctionMap;
     } else {
       p = new((void*) gvp) genie::FunctionMap;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLFunctionMap));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_459_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::FunctionMap* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genie::FunctionMap(*(genie::UnifGrid*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) genie::FunctionMap(*(genie::UnifGrid*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLFunctionMap));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_459_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const genie::UnifGrid& obj = ((const genie::FunctionMap*) G__getstructoffset())->GetGrid();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_459_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((genie::FunctionMap*) G__getstructoffset())->IncreaseGridDensity((unsigned int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((genie::FunctionMap*) G__getstructoffset())->IncreaseGridDensity((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_459_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genie::FunctionMap*) G__getstructoffset())->SetValue((double) G__double(libp->para[0]), *(vector<unsigned int>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_459_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genie::FunctionMap*) G__getstructoffset())->SetValue((double) G__double(libp->para[0]), *(vector<double>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_459_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genie::FunctionMap*) G__getstructoffset())->Value(*(vector<unsigned int>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_459_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genie::FunctionMap*) G__getstructoffset())->Value(*(vector<double>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_459_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const genie::FunctionMap*) G__getstructoffset())->ValueIsSet(*(vector<unsigned int>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_459_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const genie::FunctionMap*) G__getstructoffset())->ValueIsSet(*(vector<double>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G___ROOT_DICT_Numerical_459_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genie::FunctionMap* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genie::FunctionMap(*(genie::FunctionMap*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLFunctionMap));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genie::FunctionMap G__TgeniecLcLFunctionMap;
static int G___ROOT_DICT_Numerical_459_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genie::FunctionMap*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genie::FunctionMap*) (soff+(sizeof(genie::FunctionMap)*i)))->~G__TgeniecLcLFunctionMap();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genie::FunctionMap*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genie::FunctionMap*) (soff))->~G__TgeniecLcLFunctionMap();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_Numerical_459_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::FunctionMap* dest = (genie::FunctionMap*) G__getstructoffset();
   *dest = *(genie::FunctionMap*) libp->para[0].ref;
   const genie::FunctionMap& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::GridSpacing */
static int G___ROOT_DICT_Numerical_461_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genie::GridSpacing::AsString((genie::GridSpacing_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G___ROOT_DICT_Numerical_461_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::GridSpacing *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::GridSpacing[n];
     } else {
       p = new((void*) gvp) genie::GridSpacing[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::GridSpacing;
     } else {
       p = new((void*) gvp) genie::GridSpacing;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLGridSpacing));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G___ROOT_DICT_Numerical_461_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genie::GridSpacing* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genie::GridSpacing(*(genie::GridSpacing*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLGridSpacing));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genie::GridSpacing G__TgeniecLcLGridSpacing;
static int G___ROOT_DICT_Numerical_461_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genie::GridSpacing*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genie::GridSpacing*) (soff+(sizeof(genie::GridSpacing)*i)))->~G__TgeniecLcLGridSpacing();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genie::GridSpacing*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genie::GridSpacing*) (soff))->~G__TgeniecLcLGridSpacing();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_Numerical_461_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::GridSpacing* dest = (genie::GridSpacing*) G__getstructoffset();
   const genie::GridSpacing& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::GridDimension */
static int G___ROOT_DICT_Numerical_462_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genie::GridDimension*) G__getstructoffset())->Coord((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_462_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const genie::GridDimension*) G__getstructoffset())->ClosestPoint((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_462_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const genie::GridDimension*) G__getstructoffset())->NPoints());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_462_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genie::GridDimension*) G__getstructoffset())->Min());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_462_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genie::GridDimension*) G__getstructoffset())->Max());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_462_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const genie::GridDimension*) G__getstructoffset())->Spacing());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_462_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genie::GridDimension*) G__getstructoffset())->Set((genie::GridSpacing_t) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (unsigned int) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genie::GridDimension G__TgeniecLcLGridDimension;
static int G___ROOT_DICT_Numerical_462_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genie::GridDimension*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genie::GridDimension*) (soff+(sizeof(genie::GridDimension)*i)))->~G__TgeniecLcLGridDimension();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genie::GridDimension*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genie::GridDimension*) (soff))->~G__TgeniecLcLGridDimension();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_Numerical_462_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::GridDimension* dest = (genie::GridDimension*) G__getstructoffset();
   *dest = *(genie::GridDimension*) libp->para[0].ref;
   const genie::GridDimension& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::UnifGridDimension */
static int G___ROOT_DICT_Numerical_463_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::UnifGridDimension* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::UnifGridDimension(
(genie::GridSpacing_t) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (unsigned int) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) genie::UnifGridDimension(
(genie::GridSpacing_t) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (unsigned int) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::UnifGridDimension(
(genie::GridSpacing_t) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) genie::UnifGridDimension(
(genie::GridSpacing_t) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLUnifGridDimension));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_463_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::UnifGridDimension* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genie::UnifGridDimension(*(genie::UnifGridDimension*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) genie::UnifGridDimension(*(genie::UnifGridDimension*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLUnifGridDimension));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_463_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genie::UnifGridDimension*) G__getstructoffset())->Step());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_463_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genie::UnifGridDimension*) G__getstructoffset())->ReBin((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_463_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genie::UnifGridDimension*) G__getstructoffset())->ReBin((genie::GridSpacing_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_463_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const genie::UnifGridDimension*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genie::UnifGridDimension G__TgeniecLcLUnifGridDimension;
static int G___ROOT_DICT_Numerical_463_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genie::UnifGridDimension*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genie::UnifGridDimension*) (soff+(sizeof(genie::UnifGridDimension)*i)))->~G__TgeniecLcLUnifGridDimension();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genie::UnifGridDimension*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genie::UnifGridDimension*) (soff))->~G__TgeniecLcLUnifGridDimension();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_Numerical_463_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::UnifGridDimension* dest = (genie::UnifGridDimension*) G__getstructoffset();
   *dest = *(genie::UnifGridDimension*) libp->para[0].ref;
   const genie::UnifGridDimension& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::GSFunc */
static int G___ROOT_DICT_Numerical_585_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((genie::GSFunc*) G__getstructoffset())->operator()(*(vector<double>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genie::GSFunc G__TgeniecLcLGSFunc;
static int G___ROOT_DICT_Numerical_585_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genie::GSFunc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genie::GSFunc*) (soff+(sizeof(genie::GSFunc)*i)))->~G__TgeniecLcLGSFunc();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genie::GSFunc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genie::GSFunc*) (soff))->~G__TgeniecLcLGSFunc();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_Numerical_585_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::GSFunc* dest = (genie::GSFunc*) G__getstructoffset();
   *dest = *(genie::GSFunc*) libp->para[0].ref;
   const genie::GSFunc& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::IntegratorI */
static int G___ROOT_DICT_Numerical_586_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genie::IntegratorI*) G__getstructoffset())->Integrate(*(genie::GSFunc*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genie::IntegratorI G__TgeniecLcLIntegratorI;
static int G___ROOT_DICT_Numerical_586_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genie::IntegratorI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genie::IntegratorI*) (soff+(sizeof(genie::IntegratorI)*i)))->~G__TgeniecLcLIntegratorI();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genie::IntegratorI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genie::IntegratorI*) (soff))->~G__TgeniecLcLIntegratorI();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_Numerical_586_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::IntegratorI* dest = (genie::IntegratorI*) G__getstructoffset();
   *dest = *(genie::IntegratorI*) libp->para[0].ref;
   const genie::IntegratorI& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::Simpson2DFixN */
static int G___ROOT_DICT_Numerical_587_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::Simpson2DFixN* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::Simpson2DFixN[n];
     } else {
       p = new((void*) gvp) genie::Simpson2DFixN[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::Simpson2DFixN;
     } else {
       p = new((void*) gvp) genie::Simpson2DFixN;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSimpson2DFixN));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_587_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::Simpson2DFixN* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genie::Simpson2DFixN(*((string*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) genie::Simpson2DFixN(*((string*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSimpson2DFixN));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G___ROOT_DICT_Numerical_587_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genie::Simpson2DFixN* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genie::Simpson2DFixN(*(genie::Simpson2DFixN*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSimpson2DFixN));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genie::Simpson2DFixN G__TgeniecLcLSimpson2DFixN;
static int G___ROOT_DICT_Numerical_587_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genie::Simpson2DFixN*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genie::Simpson2DFixN*) (soff+(sizeof(genie::Simpson2DFixN)*i)))->~G__TgeniecLcLSimpson2DFixN();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genie::Simpson2DFixN*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genie::Simpson2DFixN*) (soff))->~G__TgeniecLcLSimpson2DFixN();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_Numerical_587_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::Simpson2DFixN* dest = (genie::Simpson2DFixN*) G__getstructoffset();
   *dest = *(genie::Simpson2DFixN*) libp->para[0].ref;
   const genie::Simpson2DFixN& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::Simpson2D */
static int G___ROOT_DICT_Numerical_588_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::Simpson2D* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::Simpson2D[n];
     } else {
       p = new((void*) gvp) genie::Simpson2D[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::Simpson2D;
     } else {
       p = new((void*) gvp) genie::Simpson2D;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSimpson2D));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_588_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::Simpson2D* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genie::Simpson2D(*((string*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) genie::Simpson2D(*((string*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSimpson2D));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G___ROOT_DICT_Numerical_588_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genie::Simpson2D* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genie::Simpson2D(*(genie::Simpson2D*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSimpson2D));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genie::Simpson2D G__TgeniecLcLSimpson2D;
static int G___ROOT_DICT_Numerical_588_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genie::Simpson2D*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genie::Simpson2D*) (soff+(sizeof(genie::Simpson2D)*i)))->~G__TgeniecLcLSimpson2D();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genie::Simpson2D*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genie::Simpson2D*) (soff))->~G__TgeniecLcLSimpson2D();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_Numerical_588_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::Simpson2D* dest = (genie::Simpson2D*) G__getstructoffset();
   *dest = *(genie::Simpson2D*) libp->para[0].ref;
   const genie::Simpson2D& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::BLI2DGrid */
static int G___ROOT_DICT_Numerical_589_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((genie::BLI2DGrid*) G__getstructoffset())->AddPoint((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_589_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genie::BLI2DGrid*) G__getstructoffset())->Evaluate((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_589_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genie::BLI2DGrid*) G__getstructoffset())->XMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_589_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genie::BLI2DGrid*) G__getstructoffset())->XMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_589_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genie::BLI2DGrid*) G__getstructoffset())->YMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_589_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genie::BLI2DGrid*) G__getstructoffset())->YMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_589_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genie::BLI2DGrid*) G__getstructoffset())->ZMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_589_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genie::BLI2DGrid*) G__getstructoffset())->ZMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_589_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) genie::BLI2DGrid::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_589_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genie::BLI2DGrid::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_589_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) genie::BLI2DGrid::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_589_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      genie::BLI2DGrid::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_589_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genie::BLI2DGrid*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_589_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genie::BLI2DGrid::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_589_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genie::BLI2DGrid::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_589_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genie::BLI2DGrid::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_589_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genie::BLI2DGrid::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genie::BLI2DGrid G__TgeniecLcLBLI2DGrid;
static int G___ROOT_DICT_Numerical_589_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genie::BLI2DGrid*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genie::BLI2DGrid*) (soff+(sizeof(genie::BLI2DGrid)*i)))->~G__TgeniecLcLBLI2DGrid();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genie::BLI2DGrid*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genie::BLI2DGrid*) (soff))->~G__TgeniecLcLBLI2DGrid();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_Numerical_589_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::BLI2DGrid* dest = (genie::BLI2DGrid*) G__getstructoffset();
   *dest = *(genie::BLI2DGrid*) libp->para[0].ref;
   const genie::BLI2DGrid& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::BLI2DUnifGrid */
static int G___ROOT_DICT_Numerical_590_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::BLI2DUnifGrid* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::BLI2DUnifGrid[n];
     } else {
       p = new((void*) gvp) genie::BLI2DUnifGrid[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::BLI2DUnifGrid;
     } else {
       p = new((void*) gvp) genie::BLI2DUnifGrid;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DUnifGrid));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_590_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::BLI2DUnifGrid* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genie::BLI2DUnifGrid(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5]));
   } else {
     p = new((void*) gvp) genie::BLI2DUnifGrid(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DUnifGrid));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_590_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::BLI2DUnifGrid* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genie::BLI2DUnifGrid(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (double*) G__int(libp->para[3])
, (double*) G__int(libp->para[4]));
   } else {
     p = new((void*) gvp) genie::BLI2DUnifGrid(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (double*) G__int(libp->para[3])
, (double*) G__int(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DUnifGrid));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_590_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) genie::BLI2DUnifGrid::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_590_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genie::BLI2DUnifGrid::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_590_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) genie::BLI2DUnifGrid::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_590_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      genie::BLI2DUnifGrid::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_590_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genie::BLI2DUnifGrid*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_590_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genie::BLI2DUnifGrid::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_590_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genie::BLI2DUnifGrid::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_590_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genie::BLI2DUnifGrid::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_590_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genie::BLI2DUnifGrid::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G___ROOT_DICT_Numerical_590_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genie::BLI2DUnifGrid* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genie::BLI2DUnifGrid(*(genie::BLI2DUnifGrid*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DUnifGrid));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genie::BLI2DUnifGrid G__TgeniecLcLBLI2DUnifGrid;
static int G___ROOT_DICT_Numerical_590_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genie::BLI2DUnifGrid*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genie::BLI2DUnifGrid*) (soff+(sizeof(genie::BLI2DUnifGrid)*i)))->~G__TgeniecLcLBLI2DUnifGrid();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genie::BLI2DUnifGrid*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genie::BLI2DUnifGrid*) (soff))->~G__TgeniecLcLBLI2DUnifGrid();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_Numerical_590_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::BLI2DUnifGrid* dest = (genie::BLI2DUnifGrid*) G__getstructoffset();
   *dest = *(genie::BLI2DUnifGrid*) libp->para[0].ref;
   const genie::BLI2DUnifGrid& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::BLI2DNonUnifGrid */
static int G___ROOT_DICT_Numerical_591_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::BLI2DNonUnifGrid* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::BLI2DNonUnifGrid[n];
     } else {
       p = new((void*) gvp) genie::BLI2DNonUnifGrid[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::BLI2DNonUnifGrid;
     } else {
       p = new((void*) gvp) genie::BLI2DNonUnifGrid;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DNonUnifGrid));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_591_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::BLI2DNonUnifGrid* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genie::BLI2DNonUnifGrid(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5]));
   } else {
     p = new((void*) gvp) genie::BLI2DNonUnifGrid(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DNonUnifGrid));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_591_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::BLI2DNonUnifGrid* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genie::BLI2DNonUnifGrid(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (double*) G__int(libp->para[3])
, (double*) G__int(libp->para[4]));
   } else {
     p = new((void*) gvp) genie::BLI2DNonUnifGrid(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (double*) G__int(libp->para[3])
, (double*) G__int(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DNonUnifGrid));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_591_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) genie::BLI2DNonUnifGrid::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_591_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genie::BLI2DNonUnifGrid::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_591_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) genie::BLI2DNonUnifGrid::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_591_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      genie::BLI2DNonUnifGrid::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_591_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genie::BLI2DNonUnifGrid*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_591_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genie::BLI2DNonUnifGrid::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_591_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genie::BLI2DNonUnifGrid::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_591_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genie::BLI2DNonUnifGrid::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_591_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genie::BLI2DNonUnifGrid::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G___ROOT_DICT_Numerical_591_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genie::BLI2DNonUnifGrid* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genie::BLI2DNonUnifGrid(*(genie::BLI2DNonUnifGrid*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DNonUnifGrid));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genie::BLI2DNonUnifGrid G__TgeniecLcLBLI2DNonUnifGrid;
static int G___ROOT_DICT_Numerical_591_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genie::BLI2DNonUnifGrid*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genie::BLI2DNonUnifGrid*) (soff+(sizeof(genie::BLI2DNonUnifGrid)*i)))->~G__TgeniecLcLBLI2DNonUnifGrid();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genie::BLI2DNonUnifGrid*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genie::BLI2DNonUnifGrid*) (soff))->~G__TgeniecLcLBLI2DNonUnifGrid();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_Numerical_591_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::BLI2DNonUnifGrid* dest = (genie::BLI2DNonUnifGrid*) G__getstructoffset();
   *dest = *(genie::BLI2DNonUnifGrid*) libp->para[0].ref;
   const genie::BLI2DNonUnifGrid& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::GVFunc */
static int G___ROOT_DICT_Numerical_592_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double>& obj = ((genie::GVFunc*) G__getstructoffset())->operator()(*(vector<double>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genie::GVFunc G__TgeniecLcLGVFunc;
static int G___ROOT_DICT_Numerical_592_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genie::GVFunc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genie::GVFunc*) (soff+(sizeof(genie::GVFunc)*i)))->~G__TgeniecLcLGVFunc();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genie::GVFunc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genie::GVFunc*) (soff))->~G__TgeniecLcLGVFunc();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_Numerical_592_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::GVFunc* dest = (genie::GVFunc*) G__getstructoffset();
   *dest = *(genie::GVFunc*) libp->para[0].ref;
   const genie::GVFunc& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::Simpson1D */
static int G___ROOT_DICT_Numerical_593_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::Simpson1D* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::Simpson1D[n];
     } else {
       p = new((void*) gvp) genie::Simpson1D[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::Simpson1D;
     } else {
       p = new((void*) gvp) genie::Simpson1D;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSimpson1D));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_593_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::Simpson1D* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genie::Simpson1D(*((string*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) genie::Simpson1D(*((string*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSimpson1D));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G___ROOT_DICT_Numerical_593_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genie::Simpson1D* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genie::Simpson1D(*(genie::Simpson1D*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSimpson1D));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genie::Simpson1D G__TgeniecLcLSimpson1D;
static int G___ROOT_DICT_Numerical_593_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genie::Simpson1D*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genie::Simpson1D*) (soff+(sizeof(genie::Simpson1D)*i)))->~G__TgeniecLcLSimpson1D();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genie::Simpson1D*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genie::Simpson1D*) (soff))->~G__TgeniecLcLSimpson1D();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_Numerical_593_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::Simpson1D* dest = (genie::Simpson1D*) G__getstructoffset();
   *dest = *(genie::Simpson1D*) libp->para[0].ref;
   const genie::Simpson1D& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* genie */

/* genie::Spline */

/* genie::RandomGen */

/* genie::GBFunc */

/* genie::UnifGrid */

/* genie::FunctionMap */

/* genie::GridSpacing */

/* genie::GridDimension */

/* genie::UnifGridDimension */

/* genie::GSFunc */

/* genie::IntegratorI */

/* genie::Simpson2DFixN */

/* genie::Simpson2D */

/* genie::BLI2DGrid */

/* genie::BLI2DUnifGrid */

/* genie::BLI2DNonUnifGrid */

/* genie::GVFunc */

/* genie::Simpson1D */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfunc_ROOT_DICT_Numerical {
 public:
  G__Sizep2memfunc_ROOT_DICT_Numerical(): p(&G__Sizep2memfunc_ROOT_DICT_Numerical::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfunc_ROOT_DICT_Numerical::*p)();
};

size_t G__get_sizep2memfunc_ROOT_DICT_Numerical()
{
  G__Sizep2memfunc_ROOT_DICT_Numerical a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritance_ROOT_DICT_Numerical() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline))) {
     genie::Spline *G__Lderived;
     G__Lderived=(genie::Spline*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline),G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLGBFunc))) {
     genie::GBFunc *G__Lderived;
     G__Lderived=(genie::GBFunc*)0x1000;
     {
       genie::GFunc *G__Lpbase=(genie::GFunc*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLGBFunc),G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLGFunc),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLUnifGridDimension))) {
     genie::UnifGridDimension *G__Lderived;
     G__Lderived=(genie::UnifGridDimension*)0x1000;
     {
       genie::GridDimension *G__Lpbase=(genie::GridDimension*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLUnifGridDimension),G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLGridDimension),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLGSFunc))) {
     genie::GSFunc *G__Lderived;
     G__Lderived=(genie::GSFunc*)0x1000;
     {
       genie::GFunc *G__Lpbase=(genie::GFunc*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLGSFunc),G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLGFunc),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLIntegratorI))) {
     genie::IntegratorI *G__Lderived;
     G__Lderived=(genie::IntegratorI*)0x1000;
     {
       genie::Algorithm *G__Lpbase=(genie::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLIntegratorI),G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSimpson2DFixN))) {
     genie::Simpson2DFixN *G__Lderived;
     G__Lderived=(genie::Simpson2DFixN*)0x1000;
     {
       genie::IntegratorI *G__Lpbase=(genie::IntegratorI*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSimpson2DFixN),G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLIntegratorI),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       genie::Algorithm *G__Lpbase=(genie::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSimpson2DFixN),G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSimpson2D))) {
     genie::Simpson2D *G__Lderived;
     G__Lderived=(genie::Simpson2D*)0x1000;
     {
       genie::IntegratorI *G__Lpbase=(genie::IntegratorI*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSimpson2D),G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLIntegratorI),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       genie::Algorithm *G__Lpbase=(genie::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSimpson2D),G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DGrid))) {
     genie::BLI2DGrid *G__Lderived;
     G__Lderived=(genie::BLI2DGrid*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DGrid),G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DUnifGrid))) {
     genie::BLI2DUnifGrid *G__Lderived;
     G__Lderived=(genie::BLI2DUnifGrid*)0x1000;
     {
       genie::BLI2DGrid *G__Lpbase=(genie::BLI2DGrid*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DUnifGrid),G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DGrid),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DUnifGrid),G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DNonUnifGrid))) {
     genie::BLI2DNonUnifGrid *G__Lderived;
     G__Lderived=(genie::BLI2DNonUnifGrid*)0x1000;
     {
       genie::BLI2DGrid *G__Lpbase=(genie::BLI2DGrid*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DNonUnifGrid),G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DGrid),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DNonUnifGrid),G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLGVFunc))) {
     genie::GVFunc *G__Lderived;
     G__Lderived=(genie::GVFunc*)0x1000;
     {
       genie::GFunc *G__Lpbase=(genie::GFunc*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLGVFunc),G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLGFunc),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSimpson1D))) {
     genie::Simpson1D *G__Lderived;
     G__Lderived=(genie::Simpson1D*)0x1000;
     {
       genie::IntegratorI *G__Lpbase=(genie::IntegratorI*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSimpson1D),G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLIntegratorI),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       genie::Algorithm *G__Lpbase=(genie::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSimpson1D),G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetable_ROOT_DICT_Numerical() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long int,double>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_maplElongcOdoublecOlesslElonggRcOallocatorlEpairlEconstsPlongcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("GridSpacing_t",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLEGridSpacing),0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("AlgStatus_t",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLEAlgStatus),0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("AlgCmp_t",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLEAlgCmp),0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RgType_t",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLERgType),0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<RgKey,RegistryItemI*>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,genie::RegistryItemI*>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,genie::RegistryItemI*,less<string> >",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RgIMap",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgR),0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<RgKey,RegistryItemI*>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_pairlEstringcOgeniecLcLRegistryItemImUgR),0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RgIMapPair",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_pairlEstringcOgeniecLcLRegistryItemImUgR),0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RgIMapSizeType",107,-1,0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RgIMapIter",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgRcLcLiterator),0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RgIMapConstIter",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgRcLcLiterator),0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RgKey>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RgKeyList",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_vectorlEstringcOallocatorlEstringgRsPgR),0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Algorithm*>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,genie::Algorithm*>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,genie::Algorithm*,less<string> >",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("AlgMap",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgR),0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("AlgMapIter",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgRcLcLiterator),0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("AlgMapConstIter",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgRcLcLiterator),0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<string,Algorithm*>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_pairlEstringcOgeniecLcLAlgorithmmUgR),0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("AlgMapPair",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_pairlEstringcOgeniecLcLAlgorithmmUgR),0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UnifGridDimension*>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_vectorlEgeniecLcLUnifGridDimensionmUcOallocatorlEgeniecLcLUnifGridDimensionmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_reverse_iteratorlEvectorlEgeniecLcLUnifGridDimensionmUcOallocatorlEgeniecLcLUnifGridDimensionmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_vectorlEgeniecLcLUnifGridDimensionmUcOallocatorlEgeniecLcLUnifGridDimensionmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_reverse_iteratorlEvectorlEgeniecLcLUnifGridDimensionmUcOallocatorlEgeniecLcLUnifGridDimensionmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_vectorlEgeniecLcLUnifGridDimensionmUcOallocatorlEgeniecLcLUnifGridDimensionmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<genie::UnifGridDimension*>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_vectorlEgeniecLcLUnifGridDimensionmUcOallocatorlEgeniecLcLUnifGridDimensionmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* genie */
static void G__setup_memvargenie(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_genie));
   {
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLEGridSpacing),-1,-2,1,G__FastAllocString(2048).Format("kGSpUnknown=%lldLL",(long long)genie::kGSpUnknown).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLEGridSpacing),-1,-2,1,G__FastAllocString(2048).Format("kGSpLinear=%lldLL",(long long)genie::kGSpLinear).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLEGridSpacing),-1,-2,1,G__FastAllocString(2048).Format("kGSpLoge=%lldLL",(long long)genie::kGSpLoge).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLEGridSpacing),-1,-2,1,G__FastAllocString(2048).Format("kGSpLog10=%lldLL",(long long)genie::kGSpLog10).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLEGridSpacing),-1,-2,1,G__FastAllocString(2048).Format("kGSpIrregular=%lldLL",(long long)genie::kGSpIrregular).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLEAlgStatus),-1,-2,1,G__FastAllocString(2048).Format("kAlgUndefinedStatus=%lldLL",(long long)genie::kAlgUndefinedStatus).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLEAlgStatus),-1,-2,1,G__FastAllocString(2048).Format("kAlgFail=%lldLL",(long long)genie::kAlgFail).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLEAlgStatus),-1,-2,1,G__FastAllocString(2048).Format("kAlgSuccess=%lldLL",(long long)genie::kAlgSuccess).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLEAlgCmp),-1,-2,1,G__FastAllocString(2048).Format("kAlgCmpUnknown=%lldLL",(long long)genie::kAlgCmpUnknown).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLEAlgCmp),-1,-2,1,G__FastAllocString(2048).Format("kAlgCmpIdentical=%lldLL",(long long)genie::kAlgCmpIdentical).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLEAlgCmp),-1,-2,1,G__FastAllocString(2048).Format("kAlgCmpDiffConfig=%lldLL",(long long)genie::kAlgCmpDiffConfig).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLEAlgCmp),-1,-2,1,G__FastAllocString(2048).Format("kAlgCmpDiffAlg=%lldLL",(long long)genie::kAlgCmpDiffAlg).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLERgType),-1,-2,1,G__FastAllocString(2048).Format("kRgUndefined=%lldLL",(long long)genie::kRgUndefined).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLERgType),-1,-2,1,G__FastAllocString(2048).Format("kRgBool=%lldLL",(long long)genie::kRgBool).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLERgType),-1,-2,1,G__FastAllocString(2048).Format("kRgInt=%lldLL",(long long)genie::kRgInt).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLERgType),-1,-2,1,G__FastAllocString(2048).Format("kRgDbl=%lldLL",(long long)genie::kRgDbl).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLERgType),-1,-2,1,G__FastAllocString(2048).Format("kRgStr=%lldLL",(long long)genie::kRgStr).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLERgType),-1,-2,1,G__FastAllocString(2048).Format("kRgAlg=%lldLL",(long long)genie::kRgAlg).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLERgType),-1,-2,1,G__FastAllocString(2048).Format("kRgH1F=%lldLL",(long long)genie::kRgH1F).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLERgType),-1,-2,1,G__FastAllocString(2048).Format("kRgH2F=%lldLL",(long long)genie::kRgH2F).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLERgType),-1,-2,1,G__FastAllocString(2048).Format("kRgTree=%lldLL",(long long)genie::kRgTree).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genie::Spline */
static void G__setup_memvargeniecLcLSpline(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline));
   { genie::Spline *p; p=(genie::Spline*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_string),-1,-1,4,"fName=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fNKnots=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fXMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fXMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fYMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TSpline3),-1,-1,4,"fInterpolator=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fYCanBeNegative=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genie::RandomGen */
static void G__setup_memvargeniecLcLRandomGen(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLRandomGen));
   { genie::RandomGen *p; p=(genie::RandomGen*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLRandomGen),-1,-2,4,"fInstance=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TRandom3),-1,-1,4,"fRandom3=",0,"/< Mersenne Twistor");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"fCurrSeed=",0,"/< random number generator seed number");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fInitalized=",0,"/< done initializing singleton?");
   }
   G__tag_memvar_reset();
}


   /* genie::GBFunc */
static void G__setup_memvargeniecLcLGBFunc(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLGBFunc));
   { genie::GBFunc *p; p=(genie::GBFunc*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* genie::UnifGrid */
static void G__setup_memvargeniecLcLUnifGrid(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLUnifGrid));
   { genie::UnifGrid *p; p=(genie::UnifGrid*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_vectorlEgeniecLcLUnifGridDimensionmUcOallocatorlEgeniecLcLUnifGridDimensionmUgRsPgR),G__defined_typename("vector<UnifGridDimension*>"),-1,4,"fGrid=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLRegistry),-1,-1,4,"fGridAttr=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genie::FunctionMap */
static void G__setup_memvargeniecLcLFunctionMap(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLFunctionMap));
   { genie::FunctionMap *p; p=(genie::FunctionMap*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLUnifGrid),-1,-1,4,"fGrid=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_maplElongcOdoublecOlesslElonggRcOallocatorlEpairlEconstsPlongcOdoublegRsPgRsPgR),G__defined_typename("map<long int,double>"),-1,4,"fFuncMap=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genie::GridSpacing */
static void G__setup_memvargeniecLcLGridSpacing(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLGridSpacing));
   { genie::GridSpacing *p; p=(genie::GridSpacing*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* genie::GridDimension */
static void G__setup_memvargeniecLcLGridDimension(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLGridDimension));
   { genie::GridDimension *p; p=(genie::GridDimension*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLEGridSpacing),G__defined_typename("GridSpacing_t"),-1,2,"fSpacing=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"fNPoints=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genie::UnifGridDimension */
static void G__setup_memvargeniecLcLUnifGridDimension(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLUnifGridDimension));
   { genie::UnifGridDimension *p; p=(genie::UnifGridDimension*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fStep=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fLocMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fLocMax=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genie::GSFunc */
static void G__setup_memvargeniecLcLGSFunc(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLGSFunc));
   { genie::GSFunc *p; p=(genie::GSFunc*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* genie::IntegratorI */
static void G__setup_memvargeniecLcLIntegratorI(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLIntegratorI));
   { genie::IntegratorI *p; p=(genie::IntegratorI*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* genie::Simpson2DFixN */
static void G__setup_memvargeniecLcLSimpson2DFixN(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSimpson2DFixN));
   { genie::Simpson2DFixN *p; p=(genie::Simpson2DFixN*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLEGridSpacing),G__defined_typename("GridSpacing_t"),-1,4,"fSpacingD0=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLEGridSpacing),G__defined_typename("GridSpacing_t"),-1,4,"fSpacingD1=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fNBinsD0=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fNBinsD1=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genie::Simpson2D */
static void G__setup_memvargeniecLcLSimpson2D(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSimpson2D));
   { genie::Simpson2D *p; p=(genie::Simpson2D*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fIMaxConv=",0,"/< max number of iterations before converging");
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fNo=",0,"/< 2^No + 1 is the initial number of steps");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fMaxPcntErr=",0,"/< max numerical error allowed (in %)");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLEGridSpacing),G__defined_typename("GridSpacing_t"),-1,4,"fSpacing=",0,"/< grid points spacing rule");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fFastDensityIncrease=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fForceFixedNBins=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fNBinsD0=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fNBinsD1=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genie::BLI2DGrid */
static void G__setup_memvargeniecLcLBLI2DGrid(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DGrid));
   { genie::BLI2DGrid *p; p=(genie::BLI2DGrid*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fNX=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fNY=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fNZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,2,"fX=",0,"[fNX] ");
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,2,"fY=",0,"[fNY]  ");
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,2,"fZ=",0,"[fNZ] ");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fDX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fDY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fXmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fXmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fYmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fYmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fZmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fZmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genie::BLI2DUnifGrid */
static void G__setup_memvargeniecLcLBLI2DUnifGrid(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DUnifGrid));
   { genie::BLI2DUnifGrid *p; p=(genie::BLI2DUnifGrid*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genie::BLI2DNonUnifGrid */
static void G__setup_memvargeniecLcLBLI2DNonUnifGrid(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DNonUnifGrid));
   { genie::BLI2DNonUnifGrid *p; p=(genie::BLI2DNonUnifGrid*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fNFillX=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fNFillY=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genie::GVFunc */
static void G__setup_memvargeniecLcLGVFunc(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLGVFunc));
   { genie::GVFunc *p; p=(genie::GVFunc*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"fOutV=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genie::Simpson1D */
static void G__setup_memvargeniecLcLSimpson1D(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSimpson1D));
   { genie::Simpson1D *p; p=(genie::Simpson1D*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fIMaxConv=",0,"/< max number of iterations before converging");
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fNo=",0,"/< 2^No + 1 is the initial number of steps");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fMaxPcntErr=",0,"/< max numerical error allowed (in %)");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLEGridSpacing),G__defined_typename("GridSpacing_t"),-1,4,"fSpacing=",0,"/< grid points spacing rule");
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvar_ROOT_DICT_Numerical() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncgenie(void) {
   /* genie */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_genie));
   G__memfunc_setup("operator<<",996,G___ROOT_DICT_Numerical_208_0_1, 117, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - stream u 'genie::Spline' - 11 - spl", (char*)NULL, (void*) G__func2void( (ostream& (*)(ostream&, const genie::Spline&))(&genie::operator<<) ), 0);
   G__memfunc_setup("operator<<",996,G___ROOT_DICT_Numerical_208_0_2, 117, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - stream u 'genie::UnifGridDimension' - 11 - gd", (char*)NULL, (void*) G__func2void( (ostream& (*)(ostream&, const genie::UnifGridDimension&))(&genie::operator<<) ), 0);
   G__memfunc_setup("operator<<",996,G___ROOT_DICT_Numerical_208_0_3, 117, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - stream u 'genie::AlgId' - 11 - alg", (char*)NULL, (void*) G__func2void( (ostream& (*)(ostream&, const genie::AlgId&))(&genie::operator<<) ), 0);
   G__memfunc_setup("operator<<",996,G___ROOT_DICT_Numerical_208_0_4, 117, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - stream u 'genie::Registry' - 11 - registry", (char*)NULL, (void*) G__func2void( (ostream& (*)(ostream&, const genie::Registry&))(&genie::operator<<) ), 0);
   G__memfunc_setup("operator<<",996,G___ROOT_DICT_Numerical_208_0_5, 117, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - stream u 'genie::Algorithm' - 11 - alg", (char*)NULL, (void*) G__func2void( (ostream& (*)(ostream&, const genie::Algorithm&))(&genie::operator<<) ), 0);
   G__memfunc_setup("operator<<",996,G___ROOT_DICT_Numerical_208_0_6, 117, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - stream u 'genie::UnifGrid' - 11 - grid", (char*)NULL, (void*) G__func2void( (ostream& (*)(ostream&, const genie::UnifGrid&))(&genie::operator<<) ), 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLSpline(void) {
   /* genie::Spline */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline));
   G__memfunc_setup("Spline",619,G___ROOT_DICT_Numerical_209_0_1, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Spline",619,G___ROOT_DICT_Numerical_209_0_2, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline), -1, 0, 4, 1, 1, 0, 
"u 'string' - 0 - filename u 'string' - 0 '\"\"' xtag "
"u 'string' - 0 '\"\"' ytag g - - 0 'false' is_xml", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Spline",619,G___ROOT_DICT_Numerical_209_0_3, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline), -1, 0, 3, 1, 1, 0, 
"U 'TNtupleD' - 0 - ntuple u 'string' - 0 - xy "
"u 'string' - 0 '\"\"' cut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Spline",619,G___ROOT_DICT_Numerical_209_0_4, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline), -1, 0, 3, 1, 1, 0, 
"U 'TTree' - 0 - tree u 'string' - 0 - xy "
"u 'string' - 0 '\"\"' cut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Spline",619,G___ROOT_DICT_Numerical_209_0_5, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline), -1, 0, 2, 1, 1, 0, 
"U 'TSQLServer' - 0 - db u 'string' - 0 - query", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Spline",619,G___ROOT_DICT_Numerical_209_0_6, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline), -1, 0, 3, 1, 1, 0, 
"i - - 0 - nentries D - - 0 - x "
"D - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Spline",619,G___ROOT_DICT_Numerical_209_0_7, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline), -1, 0, 3, 1, 1, 0, 
"i - - 0 - nentries F - - 0 - x "
"F - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Spline",619,G___ROOT_DICT_Numerical_209_0_8, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline), -1, 0, 1, 1, 1, 0, "u 'genie::Spline' - 11 - spline", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Spline",619,G___ROOT_DICT_Numerical_209_0_9, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline), -1, 0, 2, 1, 1, 0, 
"u 'TSpline3' - 11 - spline i - - 0 - nknots", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadFromXmlFile",1477,G___ROOT_DICT_Numerical_209_0_10, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - filename u 'string' - 0 - xtag "
"u 'string' - 0 - ytag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadFromAsciiFile",1661,G___ROOT_DICT_Numerical_209_0_11, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadFromNtuple",1420,G___ROOT_DICT_Numerical_209_0_12, 103, -1, -1, 0, 3, 1, 1, 0, 
"U 'TNtupleD' - 0 - nt u 'string' - 0 - xy "
"u 'string' - 0 '\"\"' cut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadFromTree",1188,G___ROOT_DICT_Numerical_209_0_13, 103, -1, -1, 0, 3, 1, 1, 0, 
"U 'TTree' - 0 - tr u 'string' - 0 - xy "
"u 'string' - 0 '\"\"' cut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadFromDBase",1235,G___ROOT_DICT_Numerical_209_0_14, 103, -1, -1, 0, 2, 1, 1, 0, 
"U 'TSQLServer' - 0 - db u 'string' - 0 - query", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadFromTSpline3",1542,G___ROOT_DICT_Numerical_209_0_15, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'TSpline3' - 11 - spline i - - 0 - nknots", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NKnots",605,G___ROOT_DICT_Numerical_209_0_16, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetKnot",700,G___ROOT_DICT_Numerical_209_0_17, 121, -1, -1, 0, 3, 1, 1, 8, 
"i - - 0 - iknot d - - 1 - x "
"d - - 1 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetKnotX",788,G___ROOT_DICT_Numerical_209_0_18, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - iknot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetKnotY",789,G___ROOT_DICT_Numerical_209_0_19, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - iknot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("XMin",380,G___ROOT_DICT_Numerical_209_0_20, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("XMax",382,G___ROOT_DICT_Numerical_209_0_21, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("YMax",383,G___ROOT_DICT_Numerical_209_0_22, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Evaluate",823,G___ROOT_DICT_Numerical_209_0_23, 100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsWithinValidRange",1804,G___ROOT_DICT_Numerical_209_0_24, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetName",685,G___ROOT_DICT_Numerical_209_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Name",385,G___ROOT_DICT_Numerical_209_0_26, 117, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("YCanBeNegative",1349,G___ROOT_DICT_Numerical_209_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - tf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAsXml",884,G___ROOT_DICT_Numerical_209_0_28, 121, -1, -1, 0, 4, 1, 1, 8, 
"u 'string' - 0 - filename u 'string' - 0 - xtag "
"u 'string' - 0 - ytag u 'string' - 0 '\"\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAsXml",884,G___ROOT_DICT_Numerical_209_0_29, 121, -1, -1, 0, 5, 1, 1, 8, 
"u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - str u 'string' - 0 - xtag "
"u 'string' - 0 - ytag u 'string' - 0 '\"\"' name "
"g - - 0 'false' insert", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAsText",1000,G___ROOT_DICT_Numerical_209_0_30, 121, -1, -1, 0, 2, 1, 1, 8, 
"u 'string' - 0 - filename u 'string' - 0 '\"%10.6f\\t%10.6f\"' format", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAsROOT",903,G___ROOT_DICT_Numerical_209_0_31, 121, -1, -1, 0, 3, 1, 1, 8, 
"u 'string' - 0 - filename u 'string' - 0 '\"\"' name "
"g - - 0 'false' recreate", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAsTGraph",1050,G___ROOT_DICT_Numerical_209_0_32, 85, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TGraph), -1, 0, 5, 1, 1, 8, 
"i - - 0 '500' np g - - 0 'false' xscaling "
"g - - 0 'false' inlog d - - 0 '1.' fx "
"d - - 0 '1.' fy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAsTSpline",1171,G___ROOT_DICT_Numerical_209_0_33, 85, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TSpline3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindClosestKnot",1530,G___ROOT_DICT_Numerical_209_0_34, 121, -1, -1, 0, 4, 1, 1, 8, 
"d - - 0 - x d - - 1 - xknot "
"d - - 1 - yknot C - 'Option_t' 10 '\"-+\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClosestKnotValueIsZero",2258,G___ROOT_DICT_Numerical_209_0_35, 103, -1, -1, 0, 2, 1, 1, 8, 
"d - - 0 - x C - 'Option_t' 10 '\"-+\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G___ROOT_DICT_Numerical_209_0_36, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'genie::Spline' - 11 - spl d - - 0 '1' c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Multiply",864,G___ROOT_DICT_Numerical_209_0_37, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'genie::Spline' - 11 - spl d - - 0 '1' c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Divide",597,G___ROOT_DICT_Numerical_209_0_38, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'genie::Spline' - 11 - spl d - - 0 '1' c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G___ROOT_DICT_Numerical_209_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Multiply",864,G___ROOT_DICT_Numerical_209_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Divide",597,G___ROOT_DICT_Numerical_209_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G___ROOT_DICT_Numerical_209_0_42, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - stream", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitSpline",1023,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetSpline",1134,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildSpline",1115,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"i - - 0 - nentries D - - 0 - x "
"D - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G___ROOT_DICT_Numerical_209_0_46, 85, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&genie::Spline::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G___ROOT_DICT_Numerical_209_0_47, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genie::Spline::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G___ROOT_DICT_Numerical_209_0_48, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&genie::Spline::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G___ROOT_DICT_Numerical_209_0_49, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&genie::Spline::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G___ROOT_DICT_Numerical_209_0_53, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G___ROOT_DICT_Numerical_209_0_54, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genie::Spline::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G___ROOT_DICT_Numerical_209_0_55, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genie::Spline::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G___ROOT_DICT_Numerical_209_0_56, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genie::Spline::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G___ROOT_DICT_Numerical_209_0_57, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genie::Spline::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Spline", 745, G___ROOT_DICT_Numerical_209_0_58, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_Numerical_209_0_59, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline), -1, 1, 1, 1, 1, 0, "u 'genie::Spline' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLRandomGen(void) {
   /* genie::RandomGen */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLRandomGen));
   G__memfunc_setup("Instance",821,G___ROOT_DICT_Numerical_220_0_1, 85, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLRandomGen), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (genie::RandomGen* (*)())(&genie::RandomGen::Instance) ), 0);
   G__memfunc_setup("RndKine",683,G___ROOT_DICT_Numerical_220_0_2, 117, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TRandom3), -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RndHadro",786,G___ROOT_DICT_Numerical_220_0_3, 117, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TRandom3), -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RndDec",560,G___ROOT_DICT_Numerical_220_0_4, 117, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TRandom3), -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RndFsi",582,G___ROOT_DICT_Numerical_220_0_5, 117, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TRandom3), -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RndLep",581,G___ROOT_DICT_Numerical_220_0_6, 117, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TRandom3), -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RndISel",657,G___ROOT_DICT_Numerical_220_0_7, 117, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TRandom3), -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RndGeom",684,G___ROOT_DICT_Numerical_220_0_8, 117, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TRandom3), -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RndFlux",707,G___ROOT_DICT_Numerical_220_0_9, 117, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TRandom3), -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RndEvg",582,G___ROOT_DICT_Numerical_220_0_10, 117, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TRandom3), -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RndNum",596,G___ROOT_DICT_Numerical_220_0_11, 117, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TRandom3), -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RndGen",574,G___ROOT_DICT_Numerical_220_0_12, 117, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TRandom3), -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSeed",673,G___ROOT_DICT_Numerical_220_0_13, 108, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSeed",685,G___ROOT_DICT_Numerical_220_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "l - - 0 - seed", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RandomGen",891,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLRandomGen), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RandomGen",891,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLRandomGen), -1, 0, 1, 1, 4, 0, "u 'genie::RandomGen' - 11 - rgen", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitRandomGenerators",2063,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "l - - 0 - seed", (char*)NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_Numerical_220_0_18, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLRandomGen), -1, 1, 1, 1, 1, 0, "u 'genie::RandomGen' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLGBFunc(void) {
   /* genie::GBFunc */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLGBFunc));
   G__memfunc_setup("operator()",957,G___ROOT_DICT_Numerical_222_0_1, 103, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<double>' 11 - x", (char*)NULL, (void*) NULL, 3);
   // automatic destructor
   G__memfunc_setup("~GBFunc", 659, G___ROOT_DICT_Numerical_222_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_Numerical_222_0_4, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLGBFunc), -1, 1, 1, 1, 1, 0, "u 'genie::GBFunc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLUnifGrid(void) {
   /* genie::UnifGrid */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLUnifGrid));
   G__memfunc_setup("UnifGrid",792,G___ROOT_DICT_Numerical_458_0_1, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLUnifGrid), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UnifGrid",792,G___ROOT_DICT_Numerical_458_0_2, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLUnifGrid), -1, 0, 3, 1, 1, 0, 
"u 'genie::GSFunc' - 11 - gsfunc u 'genie::EGridSpacing' 'genie::GridSpacing_t' 0 'kGSpLinear' sp "
"h - - 0 '2' np", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UnifGrid",792,G___ROOT_DICT_Numerical_458_0_3, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLUnifGrid), -1, 0, 1, 1, 1, 0, "u 'genie::UnifGrid' - 11 - grid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Coord",503,G___ROOT_DICT_Numerical_458_0_4, 100, -1, -1, 0, 2, 1, 1, 8, 
"h - - 0 - idim h - - 0 - ipoint", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NPoints",715,G___ROOT_DICT_Numerical_458_0_5, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Point",522,G___ROOT_DICT_Numerical_458_0_6, 121, -1, -1, 0, 2, 1, 1, 8, 
"h - - 0 - ipnt u 'vector<unsigned int,allocator<unsigned int> >' 'vector<unsigned int>' 1 - grid_pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UId",258,G___ROOT_DICT_Numerical_458_0_7, 108, -1, -1, 0, 1, 1, 1, 8, "u 'vector<unsigned int,allocator<unsigned int> >' 'vector<unsigned int>' 11 - grid_pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UId",258,G___ROOT_DICT_Numerical_458_0_8, 108, -1, -1, 0, 1, 1, 1, 8, "u 'vector<double,allocator<double> >' 'vector<double>' 11 - x_pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GridAttributes",1453,G___ROOT_DICT_Numerical_458_0_9, 117, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLRegistry), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNDimensions",1415,G___ROOT_DICT_Numerical_458_0_10, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddDimension",1199,G___ROOT_DICT_Numerical_458_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'genie::UnifGridDimension' - 11 - gd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GridDimension",1324,G___ROOT_DICT_Numerical_458_0_12, 85, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLUnifGridDimension), -1, 0, 1, 1, 1, 0, "h - - 0 - idim", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G___ROOT_DICT_Numerical_458_0_13, 117, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLUnifGrid), -1, 1, 1, 1, 1, 0, "u 'genie::UnifGrid' - 11 - grid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G___ROOT_DICT_Numerical_458_0_14, 100, -1, -1, 0, 2, 1, 1, 8, 
"h - - 0 - idim h - - 0 - ipoint", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G___ROOT_DICT_Numerical_458_0_15, 85, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLUnifGridDimension), -1, 0, 1, 1, 1, 9, "h - - 0 - idim", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,G___ROOT_DICT_Numerical_458_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'genie::UnifGrid' - 11 - grid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G___ROOT_DICT_Numerical_458_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G___ROOT_DICT_Numerical_458_0_18, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - stream", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CleanUp",680,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~UnifGrid", 918, G___ROOT_DICT_Numerical_458_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLFunctionMap(void) {
   /* genie::FunctionMap */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLFunctionMap));
   G__memfunc_setup("FunctionMap",1124,G___ROOT_DICT_Numerical_459_0_1, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLFunctionMap), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FunctionMap",1124,G___ROOT_DICT_Numerical_459_0_2, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLFunctionMap), -1, 0, 1, 1, 1, 0, "u 'genie::UnifGrid' - 11 - grid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGrid",678,G___ROOT_DICT_Numerical_459_0_3, 117, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLUnifGrid), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IncreaseGridDensity",1936,G___ROOT_DICT_Numerical_459_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - - 0 - np i - - 0 '-1' in_dim", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetValue",809,G___ROOT_DICT_Numerical_459_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - value u 'vector<unsigned int,allocator<unsigned int> >' 'vector<unsigned int>' 11 - pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetValue",809,G___ROOT_DICT_Numerical_459_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - value u 'vector<double,allocator<double> >' 'vector<double>' 11 - pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Value",509,G___ROOT_DICT_Numerical_459_0_7, 100, -1, -1, 0, 1, 1, 1, 8, "u 'vector<unsigned int,allocator<unsigned int> >' 'vector<unsigned int>' 11 - pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Value",509,G___ROOT_DICT_Numerical_459_0_8, 100, -1, -1, 0, 1, 1, 1, 8, "u 'vector<double,allocator<double> >' 'vector<double>' 11 - pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ValueIsSet",997,G___ROOT_DICT_Numerical_459_0_9, 103, -1, -1, 0, 1, 1, 1, 8, "u 'vector<unsigned int,allocator<unsigned int> >' 'vector<unsigned int>' 11 - pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ValueIsSet",997,G___ROOT_DICT_Numerical_459_0_10, 103, -1, -1, 0, 1, 1, 1, 8, "u 'vector<double,allocator<double> >' 'vector<double>' 11 - pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetValue",809,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"d - - 0 - value l - - 0 - uid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Value",509,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 1, 1, 4, 8, "l - - 0 - uid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ValueIsSet",997,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 4, 8, "l - - 0 - uid", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("FunctionMap", 1124, G___ROOT_DICT_Numerical_459_0_14, (int) ('i'), G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLFunctionMap), -1, 0, 1, 1, 1, 0, "u 'genie::FunctionMap' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FunctionMap", 1250, G___ROOT_DICT_Numerical_459_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_Numerical_459_0_16, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLFunctionMap), -1, 1, 1, 1, 1, 0, "u 'genie::FunctionMap' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLGridSpacing(void) {
   /* genie::GridSpacing */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLGridSpacing));
   G__memfunc_setup("AsString",811,G___ROOT_DICT_Numerical_461_0_1, 67, -1, -1, 0, 1, 3, 1, 1, "u 'genie::EGridSpacing' 'genie::GridSpacing_t' 0 - gsp", (char*)NULL, (void*) G__func2void( (const char* (*)(genie::GridSpacing_t))(&genie::GridSpacing::AsString) ), 0);
   // automatic default constructor
   G__memfunc_setup("GridSpacing", 1099, G___ROOT_DICT_Numerical_461_0_2, (int) ('i'), G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLGridSpacing), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("GridSpacing", 1099, G___ROOT_DICT_Numerical_461_0_3, (int) ('i'), G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLGridSpacing), -1, 0, 1, 1, 1, 0, "u 'genie::GridSpacing' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GridSpacing", 1225, G___ROOT_DICT_Numerical_461_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_Numerical_461_0_5, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLGridSpacing), -1, 1, 1, 1, 1, 0, "u 'genie::GridSpacing' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLGridDimension(void) {
   /* genie::GridDimension */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLGridDimension));
   G__memfunc_setup("Coord",503,G___ROOT_DICT_Numerical_462_0_1, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - ipoint", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("ClosestPoint",1255,G___ROOT_DICT_Numerical_462_0_2, 104, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - coord", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("NPoints",715,G___ROOT_DICT_Numerical_462_0_3, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Min",292,G___ROOT_DICT_Numerical_462_0_4, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Max",294,G___ROOT_DICT_Numerical_462_0_5, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Spacing",709,G___ROOT_DICT_Numerical_462_0_6, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLEGridSpacing), G__defined_typename("genie::GridSpacing_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Set",300,G___ROOT_DICT_Numerical_462_0_7, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'genie::EGridSpacing' 'genie::GridSpacing_t' 0 - sp d - - 0 - min "
"d - - 0 - max h - - 0 - n", (char*)NULL, (void*) NULL, 1);
   // automatic destructor
   G__memfunc_setup("~GridDimension", 1450, G___ROOT_DICT_Numerical_462_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_Numerical_462_0_11, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLGridDimension), -1, 1, 1, 1, 1, 0, "u 'genie::GridDimension' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLUnifGridDimension(void) {
   /* genie::UnifGridDimension */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLUnifGridDimension));
   G__memfunc_setup("UnifGridDimension",1726,G___ROOT_DICT_Numerical_463_0_1, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLUnifGridDimension), -1, 0, 4, 1, 1, 0, 
"u 'genie::EGridSpacing' 'genie::GridSpacing_t' 0 - sp d - - 0 - min "
"d - - 0 - max h - - 0 '2' n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UnifGridDimension",1726,G___ROOT_DICT_Numerical_463_0_2, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLUnifGridDimension), -1, 0, 1, 1, 1, 0, "u 'genie::UnifGridDimension' - 11 - grdim", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Coord",503,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - ipoint", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ClosestPoint",1255,(G__InterfaceMethod) NULL,104, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - coord", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Set",300,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"u 'genie::EGridSpacing' 'genie::GridSpacing_t' 0 - sp d - - 0 - min "
"d - - 0 - max h - - 0 - n", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Step",412,G___ROOT_DICT_Numerical_463_0_6, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReBin",464,G___ROOT_DICT_Numerical_463_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReBin",464,G___ROOT_DICT_Numerical_463_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'genie::EGridSpacing' 'genie::GridSpacing_t' 0 - sp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G___ROOT_DICT_Numerical_463_0_9, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - stream", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~UnifGridDimension", 1852, G___ROOT_DICT_Numerical_463_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_Numerical_463_0_11, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLUnifGridDimension), -1, 1, 1, 1, 1, 0, "u 'genie::UnifGridDimension' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLGSFunc(void) {
   /* genie::GSFunc */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLGSFunc));
   G__memfunc_setup("operator()",957,G___ROOT_DICT_Numerical_585_0_1, 100, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<double>' 11 - x", (char*)NULL, (void*) NULL, 3);
   // automatic destructor
   G__memfunc_setup("~GSFunc", 676, G___ROOT_DICT_Numerical_585_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_Numerical_585_0_4, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLGSFunc), -1, 1, 1, 1, 1, 0, "u 'genie::GSFunc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLIntegratorI(void) {
   /* genie::IntegratorI */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLIntegratorI));
   G__memfunc_setup("Integrate",931,G___ROOT_DICT_Numerical_586_0_1, 100, -1, -1, 0, 1, 1, 1, 8, "u 'genie::GSFunc' - 1 - gsfunc", (char*)NULL, (void*) NULL, 3);
   // automatic destructor
   G__memfunc_setup("~IntegratorI", 1254, G___ROOT_DICT_Numerical_586_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_Numerical_586_0_6, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLIntegratorI), -1, 1, 1, 1, 1, 0, "u 'genie::IntegratorI' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLSimpson2DFixN(void) {
   /* genie::Simpson2DFixN */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSimpson2DFixN));
   G__memfunc_setup("Simpson2DFixN",1236,G___ROOT_DICT_Numerical_587_0_1, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSimpson2DFixN), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Simpson2DFixN",1236,G___ROOT_DICT_Numerical_587_0_2, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSimpson2DFixN), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - config", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Integrate",931,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "u 'genie::GSFunc' - 1 - gsfunc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Configure",930,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'genie::Registry' - 11 - config", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Configure",930,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - param_set", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadConfigData",1360,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("J",74,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 1, 1, 4, 8, "u 'vector<double,allocator<double> >' 'vector<double>' 11 - r", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Simpson2DFixN", 1236, G___ROOT_DICT_Numerical_587_0_8, (int) ('i'), G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSimpson2DFixN), -1, 0, 1, 1, 1, 0, "u 'genie::Simpson2DFixN' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Simpson2DFixN", 1362, G___ROOT_DICT_Numerical_587_0_9, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_Numerical_587_0_10, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSimpson2DFixN), -1, 1, 1, 1, 1, 0, "u 'genie::Simpson2DFixN' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLSimpson2D(void) {
   /* genie::Simpson2D */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSimpson2D));
   G__memfunc_setup("Simpson2D",863,G___ROOT_DICT_Numerical_588_0_1, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSimpson2D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Simpson2D",863,G___ROOT_DICT_Numerical_588_0_2, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSimpson2D), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - config", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Integrate",931,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "u 'genie::GSFunc' - 1 - gsfunc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Configure",930,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'genie::Registry' - 11 - config", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Configure",930,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - param_set", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SimpsonRule",1153,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 1, 1, 4, 8, "u 'genie::FunctionMap' - 1 - func_map", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadConfigData",1360,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Simpson2D", 863, G___ROOT_DICT_Numerical_588_0_8, (int) ('i'), G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSimpson2D), -1, 0, 1, 1, 1, 0, "u 'genie::Simpson2D' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Simpson2D", 989, G___ROOT_DICT_Numerical_588_0_9, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_Numerical_588_0_10, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSimpson2D), -1, 1, 1, 1, 1, 0, "u 'genie::Simpson2D' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLBLI2DGrid(void) {
   /* genie::BLI2DGrid */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DGrid));
   G__memfunc_setup("AddPoint",787,G___ROOT_DICT_Numerical_589_0_2, 103, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - x d - - 0 - y "
"d - - 0 - z", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Evaluate",823,G___ROOT_DICT_Numerical_589_0_3, 100, -1, -1, 0, 2, 1, 1, 8, 
"d - - 0 - x d - - 0 - y", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("XMin",380,G___ROOT_DICT_Numerical_589_0_4, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("XMax",382,G___ROOT_DICT_Numerical_589_0_5, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("YMin",381,G___ROOT_DICT_Numerical_589_0_6, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("YMax",383,G___ROOT_DICT_Numerical_589_0_7, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ZMin",382,G___ROOT_DICT_Numerical_589_0_8, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ZMax",384,G___ROOT_DICT_Numerical_589_0_9, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 6, 1, 2, 0, 
"i - - 0 - nx d - - 0 - xmin "
"d - - 0 - xmax i - - 0 - ny "
"d - - 0 - ymin d - - 0 - ymax", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("IdxZ",383,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 2, 1, 2, 8, 
"i - - 0 - ix i - - 0 - iy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G___ROOT_DICT_Numerical_589_0_12, 85, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&genie::BLI2DGrid::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G___ROOT_DICT_Numerical_589_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genie::BLI2DGrid::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G___ROOT_DICT_Numerical_589_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&genie::BLI2DGrid::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G___ROOT_DICT_Numerical_589_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&genie::BLI2DGrid::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G___ROOT_DICT_Numerical_589_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G___ROOT_DICT_Numerical_589_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genie::BLI2DGrid::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G___ROOT_DICT_Numerical_589_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genie::BLI2DGrid::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G___ROOT_DICT_Numerical_589_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genie::BLI2DGrid::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G___ROOT_DICT_Numerical_589_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genie::BLI2DGrid::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~BLI2DGrid", 849, G___ROOT_DICT_Numerical_589_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_Numerical_589_0_25, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DGrid), -1, 1, 1, 1, 1, 0, "u 'genie::BLI2DGrid' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLBLI2DUnifGrid(void) {
   /* genie::BLI2DUnifGrid */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DUnifGrid));
   G__memfunc_setup("BLI2DUnifGrid",1125,G___ROOT_DICT_Numerical_590_0_1, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DUnifGrid), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BLI2DUnifGrid",1125,G___ROOT_DICT_Numerical_590_0_2, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DUnifGrid), -1, 0, 6, 1, 1, 0, 
"i - - 0 - nx d - - 0 - xmin "
"d - - 0 - xmax i - - 0 - ny "
"d - - 0 - ymin d - - 0 - ymax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BLI2DUnifGrid",1125,G___ROOT_DICT_Numerical_590_0_3, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DUnifGrid), -1, 0, 5, 1, 1, 0, 
"i - - 0 - nx i - - 0 - ny "
"D - - 0 - x D - - 0 - y "
"D - - 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddPoint",787,(G__InterfaceMethod) NULL,103, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - x d - - 0 - y "
"d - - 0 - z", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Evaluate",823,(G__InterfaceMethod) NULL,100, -1, -1, 0, 2, 1, 1, 8, 
"d - - 0 - x d - - 0 - y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 6, 1, 4, 0, 
"i - - 0 '0' nx d - - 0 '0' xmin "
"d - - 0 '0' xmax i - - 0 '0' ny "
"d - - 0 '0' ymin d - - 0 '0' ymax", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G___ROOT_DICT_Numerical_590_0_7, 85, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&genie::BLI2DUnifGrid::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G___ROOT_DICT_Numerical_590_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genie::BLI2DUnifGrid::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G___ROOT_DICT_Numerical_590_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&genie::BLI2DUnifGrid::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G___ROOT_DICT_Numerical_590_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&genie::BLI2DUnifGrid::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G___ROOT_DICT_Numerical_590_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G___ROOT_DICT_Numerical_590_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genie::BLI2DUnifGrid::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G___ROOT_DICT_Numerical_590_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genie::BLI2DUnifGrid::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G___ROOT_DICT_Numerical_590_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genie::BLI2DUnifGrid::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G___ROOT_DICT_Numerical_590_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genie::BLI2DUnifGrid::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("BLI2DUnifGrid", 1125, G___ROOT_DICT_Numerical_590_0_19, (int) ('i'), G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DUnifGrid), -1, 0, 1, 1, 1, 0, "u 'genie::BLI2DUnifGrid' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BLI2DUnifGrid", 1251, G___ROOT_DICT_Numerical_590_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_Numerical_590_0_21, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DUnifGrid), -1, 1, 1, 1, 1, 0, "u 'genie::BLI2DUnifGrid' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLBLI2DNonUnifGrid(void) {
   /* genie::BLI2DNonUnifGrid */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DNonUnifGrid));
   G__memfunc_setup("BLI2DNonUnifGrid",1424,G___ROOT_DICT_Numerical_591_0_1, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DNonUnifGrid), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BLI2DNonUnifGrid",1424,G___ROOT_DICT_Numerical_591_0_2, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DNonUnifGrid), -1, 0, 6, 1, 1, 0, 
"i - - 0 - nx d - - 0 - xmin "
"d - - 0 - xmax i - - 0 - ny "
"d - - 0 - ymin d - - 0 - ymax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BLI2DNonUnifGrid",1424,G___ROOT_DICT_Numerical_591_0_3, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DNonUnifGrid), -1, 0, 5, 1, 1, 0, 
"i - - 0 - nx i - - 0 - ny "
"D - - 0 - x D - - 0 - y "
"D - - 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddPoint",787,(G__InterfaceMethod) NULL,103, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - x d - - 0 - y "
"d - - 0 - z", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Evaluate",823,(G__InterfaceMethod) NULL,100, -1, -1, 0, 2, 1, 1, 8, 
"d - - 0 - x d - - 0 - y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 6, 1, 4, 0, 
"i - - 0 '0' nx d - - 0 '0' xmin "
"d - - 0 '0' xmax i - - 0 '0' ny "
"d - - 0 '0' ymin d - - 0 '0' ymax", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G___ROOT_DICT_Numerical_591_0_7, 85, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&genie::BLI2DNonUnifGrid::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G___ROOT_DICT_Numerical_591_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genie::BLI2DNonUnifGrid::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G___ROOT_DICT_Numerical_591_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&genie::BLI2DNonUnifGrid::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G___ROOT_DICT_Numerical_591_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&genie::BLI2DNonUnifGrid::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G___ROOT_DICT_Numerical_591_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G___ROOT_DICT_Numerical_591_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genie::BLI2DNonUnifGrid::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G___ROOT_DICT_Numerical_591_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genie::BLI2DNonUnifGrid::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G___ROOT_DICT_Numerical_591_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genie::BLI2DNonUnifGrid::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G___ROOT_DICT_Numerical_591_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genie::BLI2DNonUnifGrid::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("BLI2DNonUnifGrid", 1424, G___ROOT_DICT_Numerical_591_0_19, (int) ('i'), G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DNonUnifGrid), -1, 0, 1, 1, 1, 0, "u 'genie::BLI2DNonUnifGrid' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BLI2DNonUnifGrid", 1550, G___ROOT_DICT_Numerical_591_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_Numerical_591_0_21, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DNonUnifGrid), -1, 1, 1, 1, 1, 0, "u 'genie::BLI2DNonUnifGrid' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLGVFunc(void) {
   /* genie::GVFunc */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLGVFunc));
   G__memfunc_setup("operator()",957,G___ROOT_DICT_Numerical_592_0_1, 117, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 1, 1, 1, 1, 1, "u 'vector<double,allocator<double> >' 'vector<double>' 11 - x", (char*)NULL, (void*) NULL, 3);
   // automatic destructor
   G__memfunc_setup("~GVFunc", 679, G___ROOT_DICT_Numerical_592_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_Numerical_592_0_4, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLGVFunc), -1, 1, 1, 1, 1, 0, "u 'genie::GVFunc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLSimpson1D(void) {
   /* genie::Simpson1D */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSimpson1D));
   G__memfunc_setup("Simpson1D",862,G___ROOT_DICT_Numerical_593_0_1, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSimpson1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Simpson1D",862,G___ROOT_DICT_Numerical_593_0_2, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSimpson1D), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - config", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Integrate",931,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "u 'genie::GSFunc' - 1 - gsfunc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Configure",930,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'genie::Registry' - 11 - config", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Configure",930,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - param_set", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SimpsonRule",1153,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 1, 1, 4, 8, "u 'genie::FunctionMap' - 1 - func_map", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadConfigData",1360,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Simpson1D", 862, G___ROOT_DICT_Numerical_593_0_8, (int) ('i'), G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSimpson1D), -1, 0, 1, 1, 1, 0, "u 'genie::Simpson1D' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Simpson1D", 988, G___ROOT_DICT_Numerical_593_0_9, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_Numerical_593_0_10, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSimpson1D), -1, 1, 1, 1, 1, 0, "u 'genie::Simpson1D' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfunc_ROOT_DICT_Numerical() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_global_ROOT_DICT_Numerical() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_func_ROOT_DICT_Numerical() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G___ROOT_DICT_NumericalLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ofstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_string = { "string" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_TGraph = { "TGraph" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_TSpline3 = { "TSpline3" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_TNtupleD = { "TNtupleD" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_TSQLServer = { "TSQLServer" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_genie = { "genie" , 110 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_geniecLcLSpline = { "genie::Spline" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_geniecLcLGFunc = { "genie::GFunc" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_TRandom3 = { "TRandom3" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_geniecLcLRandomGen = { "genie::RandomGen" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_geniecLcLGBFunc = { "genie::GBFunc" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_maplElongcOdoublecOlesslElonggRcOallocatorlEpairlEconstsPlongcOdoublegRsPgRsPgR = { "map<long,double,less<long>,allocator<pair<const long,double> > >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_geniecLcLUnifGrid = { "genie::UnifGrid" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_geniecLcLFunctionMap = { "genie::FunctionMap" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_geniecLcLEGridSpacing = { "genie::EGridSpacing" , 101 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_geniecLcLGridSpacing = { "genie::GridSpacing" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_geniecLcLGridDimension = { "genie::GridDimension" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_geniecLcLUnifGridDimension = { "genie::UnifGridDimension" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_geniecLcLEAlgStatus = { "genie::EAlgStatus" , 101 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_geniecLcLEAlgCmp = { "genie::EAlgCmp" , 101 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_geniecLcLAlgId = { "genie::AlgId" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_geniecLcLERgType = { "genie::ERgType" , 101 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgR = { "map<string,genie::RegistryItemI*,less<string>,allocator<pair<const string,genie::RegistryItemI*> > >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_pairlEstringcOgeniecLcLRegistryItemImUgR = { "pair<string,genie::RegistryItemI*>" , 115 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgRcLcLiterator = { "map<string,genie::RegistryItemI*,less<string>,allocator<pair<const string,genie::RegistryItemI*> > >::iterator" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_geniecLcLRegistry = { "genie::Registry" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_geniecLcLAlgorithm = { "genie::Algorithm" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgR = { "map<string,genie::Algorithm*,less<string>,allocator<pair<const string,genie::Algorithm*> > >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_pairlEstringcOgeniecLcLAlgorithmmUgR = { "pair<string,genie::Algorithm*>" , 115 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgRcLcLiterator = { "map<string,genie::Algorithm*,less<string>,allocator<pair<const string,genie::Algorithm*> > >::iterator" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_geniecLcLGSFunc = { "genie::GSFunc" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_geniecLcLIntegratorI = { "genie::IntegratorI" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_geniecLcLSimpson2DFixN = { "genie::Simpson2DFixN" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_geniecLcLSimpson2D = { "genie::Simpson2D" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_geniecLcLBLI2DGrid = { "genie::BLI2DGrid" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_geniecLcLBLI2DUnifGrid = { "genie::BLI2DUnifGrid" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_geniecLcLBLI2DNonUnifGrid = { "genie::BLI2DNonUnifGrid" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_geniecLcLGVFunc = { "genie::GVFunc" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_geniecLcLSimpson1D = { "genie::Simpson1D" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_vectorlEgeniecLcLUnifGridDimensionmUcOallocatorlEgeniecLcLUnifGridDimensionmUgRsPgR = { "vector<genie::UnifGridDimension*,allocator<genie::UnifGridDimension*> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_reverse_iteratorlEvectorlEgeniecLcLUnifGridDimensionmUcOallocatorlEgeniecLcLUnifGridDimensionmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<genie::UnifGridDimension*,allocator<genie::UnifGridDimension*> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtable_ROOT_DICT_Numerical() {
  G___ROOT_DICT_NumericalLN_TClass.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_TBuffer.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_TMemberInspector.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_TObject.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_string.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_TVectorTlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_TVectorTlEdoublegR.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_TGraph.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_TSpline3.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_TNtupleD.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_TTree.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_TSQLServer.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_genie.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_geniecLcLSpline.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_geniecLcLGFunc.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_TRandom3.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_geniecLcLRandomGen.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_geniecLcLGBFunc.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_maplElongcOdoublecOlesslElonggRcOallocatorlEpairlEconstsPlongcOdoublegRsPgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_geniecLcLUnifGrid.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_geniecLcLFunctionMap.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_geniecLcLEGridSpacing.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_geniecLcLGridSpacing.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_geniecLcLGridDimension.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_geniecLcLUnifGridDimension.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_geniecLcLEAlgStatus.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_geniecLcLEAlgCmp.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_geniecLcLAlgId.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_geniecLcLERgType.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_pairlEstringcOgeniecLcLRegistryItemImUgR.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_geniecLcLRegistry.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_geniecLcLAlgorithm.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_pairlEstringcOgeniecLcLAlgorithmmUgR.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_geniecLcLGSFunc.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_geniecLcLIntegratorI.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_geniecLcLSimpson2DFixN.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_geniecLcLSimpson2D.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_geniecLcLBLI2DGrid.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_geniecLcLBLI2DUnifGrid.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_geniecLcLBLI2DNonUnifGrid.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_geniecLcLGVFunc.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_geniecLcLSimpson1D.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_vectorlEgeniecLcLUnifGridDimensionmUcOallocatorlEgeniecLcLUnifGridDimensionmUgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_reverse_iteratorlEvectorlEgeniecLcLUnifGridDimensionmUcOallocatorlEgeniecLcLUnifGridDimensionmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtable_ROOT_DICT_Numerical() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_TClass);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_TBuffer);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_TObject);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_string);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_TGraph);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_TSpline3);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_TNtupleD);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_TTree);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_TSQLServer);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_genie),0,-1,0,(char*)NULL,G__setup_memvargenie,G__setup_memfuncgenie);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_geniecLcLSpline),sizeof(genie::Spline),-1,63232,(char*)NULL,G__setup_memvargeniecLcLSpline,G__setup_memfuncgeniecLcLSpline);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_geniecLcLGFunc);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_TRandom3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_geniecLcLRandomGen),sizeof(genie::RandomGen),-1,1792,(char*)NULL,G__setup_memvargeniecLcLRandomGen,G__setup_memfuncgeniecLcLRandomGen);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_geniecLcLGBFunc),sizeof(genie::GBFunc),-1,33793,(char*)NULL,G__setup_memvargeniecLcLGBFunc,G__setup_memfuncgeniecLcLGBFunc);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_maplElongcOdoublecOlesslElonggRcOallocatorlEpairlEconstsPlongcOdoublegRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_geniecLcLUnifGrid),sizeof(genie::UnifGrid),-1,36608,(char*)NULL,G__setup_memvargeniecLcLUnifGrid,G__setup_memfuncgeniecLcLUnifGrid);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_geniecLcLFunctionMap),sizeof(genie::FunctionMap),-1,34048,(char*)NULL,G__setup_memvargeniecLcLFunctionMap,G__setup_memfuncgeniecLcLFunctionMap);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_geniecLcLEGridSpacing);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_geniecLcLGridSpacing),sizeof(genie::GridSpacing),-1,0,(char*)NULL,G__setup_memvargeniecLcLGridSpacing,G__setup_memfuncgeniecLcLGridSpacing);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_geniecLcLGridDimension),sizeof(genie::GridDimension),-1,34050,(char*)NULL,G__setup_memvargeniecLcLGridDimension,G__setup_memfuncgeniecLcLGridDimension);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_geniecLcLUnifGridDimension),sizeof(genie::UnifGridDimension),-1,34304,(char*)NULL,G__setup_memvargeniecLcLUnifGridDimension,G__setup_memfuncgeniecLcLUnifGridDimension);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_geniecLcLEAlgStatus);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_geniecLcLEAlgCmp);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_geniecLcLAlgId);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_geniecLcLERgType);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_pairlEstringcOgeniecLcLRegistryItemImUgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_geniecLcLRegistry);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_geniecLcLAlgorithm);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_pairlEstringcOgeniecLcLAlgorithmmUgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgRcLcLiterator);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_geniecLcLGSFunc),sizeof(genie::GSFunc),-1,33793,(char*)NULL,G__setup_memvargeniecLcLGSFunc,G__setup_memfuncgeniecLcLGSFunc);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_geniecLcLIntegratorI),sizeof(genie::IntegratorI),-1,34049,(char*)NULL,G__setup_memvargeniecLcLIntegratorI,G__setup_memfuncgeniecLcLIntegratorI);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_geniecLcLSimpson2DFixN),sizeof(genie::Simpson2DFixN),-1,34048,(char*)NULL,G__setup_memvargeniecLcLSimpson2DFixN,G__setup_memfuncgeniecLcLSimpson2DFixN);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_geniecLcLSimpson2D),sizeof(genie::Simpson2D),-1,34048,(char*)NULL,G__setup_memvargeniecLcLSimpson2D,G__setup_memfuncgeniecLcLSimpson2D);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DGrid),sizeof(genie::BLI2DGrid),-1,29955,(char*)NULL,G__setup_memvargeniecLcLBLI2DGrid,G__setup_memfuncgeniecLcLBLI2DGrid);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DUnifGrid),sizeof(genie::BLI2DUnifGrid),-1,61696,(char*)NULL,G__setup_memvargeniecLcLBLI2DUnifGrid,G__setup_memfuncgeniecLcLBLI2DUnifGrid);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DNonUnifGrid),sizeof(genie::BLI2DNonUnifGrid),-1,61696,(char*)NULL,G__setup_memvargeniecLcLBLI2DNonUnifGrid,G__setup_memfuncgeniecLcLBLI2DNonUnifGrid);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_geniecLcLGVFunc),sizeof(genie::GVFunc),-1,33793,(char*)NULL,G__setup_memvargeniecLcLGVFunc,G__setup_memfuncgeniecLcLGVFunc);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_geniecLcLSimpson1D),sizeof(genie::Simpson1D),-1,34048,(char*)NULL,G__setup_memvargeniecLcLSimpson1D,G__setup_memfuncgeniecLcLSimpson1D);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_vectorlEgeniecLcLUnifGridDimensionmUcOallocatorlEgeniecLcLUnifGridDimensionmUgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_reverse_iteratorlEvectorlEgeniecLcLUnifGridDimensionmUcOallocatorlEgeniecLcLUnifGridDimensionmUgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setup_ROOT_DICT_Numerical(void) {
  G__check_setup_version(30051515,"G__cpp_setup_ROOT_DICT_Numerical()");
  G__set_cpp_environment_ROOT_DICT_Numerical();
  G__cpp_setup_tagtable_ROOT_DICT_Numerical();

  G__cpp_setup_inheritance_ROOT_DICT_Numerical();

  G__cpp_setup_typetable_ROOT_DICT_Numerical();

  G__cpp_setup_memvar_ROOT_DICT_Numerical();

  G__cpp_setup_memfunc_ROOT_DICT_Numerical();
  G__cpp_setup_global_ROOT_DICT_Numerical();
  G__cpp_setup_func_ROOT_DICT_Numerical();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfunc_ROOT_DICT_Numerical();
  return;
}
class G__cpp_setup_init_ROOT_DICT_Numerical {
  public:
    G__cpp_setup_init_ROOT_DICT_Numerical() { G__add_setup_func("_ROOT_DICT_Numerical",(G__incsetup)(&G__cpp_setup_ROOT_DICT_Numerical)); G__call_setup_funcs(); }
   ~G__cpp_setup_init_ROOT_DICT_Numerical() { G__remove_setup_func("_ROOT_DICT_Numerical"); }
};
G__cpp_setup_init_ROOT_DICT_Numerical G__cpp_setup_initializer_ROOT_DICT_Numerical;

